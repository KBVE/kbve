using Unity.Entities;
using Unity.Physics;
using UnityEngine;
using KBVE.MMExtensions.Orchestrator.DOTS.Common;

namespace KBVE.MMExtensions.Orchestrator.DOTS
{
    public class SoldierAuthoring : MonoBehaviour
    {
        private class SoldierBaker : Baker<SoldierAuthoring>
        {
            public override void Bake(SoldierAuthoring authoring)
            {
                var entity = GetEntity(TransformUsageFlags.None);
                AddComponent<SoldierTag>(entity);
                AddComponent<MovingTag>(entity);
                SetComponentEnabled<MovingTag>(entity, false);
                AddComponent<Destination>(entity);
                AddComponent<MoveTimer>(entity);
                AddComponent(entity, new MoveSpeed { value = authoring.MoveSpeed });

                // Add universal EntityComponent for hover/selection system
                // Note: Entity ULID will be generated by FactorySystem when instantiated from prefab
                var entityData = new EntityData
                {
                    Ulid = default, // Will be overwritten by FactorySystem with unique ULID
                    Type = EntityType.Monster | EntityType.Unit | EntityType.NPC | EntityType.Interactable | EntityType.Enemy,
                    ActionFlags = EntityActionFlags.CanInteract | EntityActionFlags.CanAttack,
                    WorldPos = authoring.transform.position
                };
                AddComponent(entity, new EntityComponent { Data = entityData });

                // Add Combatant component so bridge systems can detect this as a combatant
                var combatantData = new CombatantData
                {
                    TemplateUlid = default, // Will be set by factory or spawning system
                    Type = CombatantType.Monster,
                    Flags = CombatantFlags.IsHostile,
                    State = CombatantState.Idle,
                    Level = 1,
                    Health = 100,
                    MaxHealth = 100,
                    Mana = 0,
                    MaxMana = 0,
                    AttackDamage = 10,
                    Defense = 5,
                    AttackSpeed = 1f,
                    MoveSpeed = authoring.MoveSpeed,
                    DetectionRange = 10f
                };
                AddComponent(entity, new Combatant { Data = combatantData });
            }
        }

        public float MoveSpeed;
    }
}
