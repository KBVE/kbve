grafana:
    ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
            cert-manager.io/cluster-issuer: letsencrypt-http
            nginx.ingress.kubernetes.io/backend-protocol: 'HTTP'
        hosts:
            - grafana.kbve.com
        tls:
            - hosts:
                  - grafana.kbve.com
              secretName: grafana-tls

    admin:
        existingSecret: grafana-admin
        userKey: admin-user
        passwordKey: admin-password

    dashboardProviders:
        dashboardproviders.yaml:
            apiVersion: 1
            providers:
                - name: 'default'
                  orgId: 1
                  folder: ''
                  type: file
                  disableDeletion: false
                  editable: true
                  options:
                      path: /var/lib/grafana/dashboards/default

    dashboardsConfigMaps:
        default: "grafana-dashboards"

prometheus-node-exporter:
    tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - operator: Exists
          effect: NoSchedule
        - operator: Exists 
          effect: NoExecute
    podAnnotations:
        pod-security.kubernetes.io/enforce: privileged
        pod-security.kubernetes.io/audit: privileged
        pod-security.kubernetes.io/warn: privileged
    
    hostNetwork: true
    hostPID: true
    
    securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
    
    containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
            drop:
                - ALL
        readOnlyRootFilesystem: true

prometheusOperator:
    admissionWebhooks:
        enabled: false
