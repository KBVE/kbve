apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: externalsecrets.external-secrets.io
spec:
  group: external-secrets.io
  names:
    categories:
    - externalsecrets
    kind: ExternalSecret
    listKind: ExternalSecretList
    plural: externalsecrets
    shortNames:
    - es
    singular: externalsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.secretStoreRef.name
      name: Store
      type: string
    - jsonPath: .spec.refreshInterval
      name: Refresh Interval
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ExternalSecret is the Schema for the external-secrets API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ExternalSecretSpec defines the desired state of ExternalSecret.
            properties:
              dataFrom:
                description: DataFrom is used to fetch all properties from a specific
                  Provider data If multiple entries are specified, the Secret keys
                  are merged in the specified order
                items:
                  description: ExternalSecretDataFromRemoteRef defines Provider data
                    to be fetched
                  properties:
                    extract:
                      description: 'Used to extract multiple key-value pairs from
                        one secret Note: Extract does not support sourceRef.Generator
                        or sourceRef.GeneratorRef.'
                      properties:
                        conversionStrategy:
                          default: Default
                          description: Used to define a conversion Strategy
                          enum:
                          - Default
                          - Unicode
                          type: string
                        decodingStrategy:
                          default: None
                          description: Used to define a decoding Strategy
                          enum:
                          - Auto
                          - Base64
                          - Base64URL
                          - None
                          type: string
                        key:
                          description: Key is the key used in the Provider, mandatory
                          type: string
                        metadataPolicy:
                          default: None
                          description: Policy for fetching tags/labels from provider
                            secrets, possible options are Fetch, None. Defaults to
                            None
                          enum:
                          - None
                          - Fetch
                          type: string
                        property:
                          description: Used to select a specific property of the Provider
                            value (if a map), if supported
                          type: string
                        version:
                          description: Used to select a specific version of the Provider
                            value, if supported
                          type: string
                      required:
                      - key
                      type: object
                    find:
                      description: 'Used to find secrets based on tags or regular
                        expressions Note: Find does not support sourceRef.Generator
                        or sourceRef.GeneratorRef.'
                      properties:
                        conversionStrategy:
                          default: Default
                          description: Used to define a conversion Strategy
                          enum:
                          - Default
                          - Unicode
                          type: string
                        decodingStrategy:
                          default: None
                          description: Used to define a decoding Strategy
                          enum:
                          - Auto
                          - Base64
                          - Base64URL
                          - None
                          type: string
                        name:
                          description: Finds secrets based on the name.
                          properties:
                            regexp:
                              description: Finds secrets base
                              type: string
                          type: object
                        path:
                          description: A root path to start the find operations.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Find secrets based on tags.
                          type: object
                      type: object
                    rewrite:
                      description: Used to rewrite secret Keys after getting them
                        from the secret Provider Multiple Rewrite operations can be
                        provided. They are applied in a layered order (first to last)
                      items:
                        properties:
                          regexp:
                            description: Used to rewrite with regular expressions.
                              The resulting key will be the output of a regexp.ReplaceAll
                              operation.
                            properties:
                              source:
                                description: Used to define the regular expression
                                  of a re-write operation.
                                type: string
                              target:
                                description: Used to define the target pattern of
                                  a re-write operation.
                                type: string
                            required:
                            - source
                            - target
                            type: object
                          transform:
                            description: Used to apply string transformation on the
                              secrets. The resulting key will be the output of the
                              template applied by the operation.
                            properties:
                              template:
                                description: Used to define the template to apply
                                  on the secret name. `.value` will specify the secret
                                  name in the template.
                                type: string
                            required:
                            - template
                            type: object
                        type: object
                      type: array
                    sourceRef:
                      description: SourceRef points to a store or generator which
                        contains secret values ready to use. Use this in combination
                        with Extract or Find pull values out of a specific SecretStore.
                        When sourceRef points to a generator Extract or Find is not
                        supported. The generator returns a static map of values
                      properties:
                        generatorRef:
                          description: GeneratorRef points to a generator custom resource.
                          properties:
                            apiVersion:
                              default: generators.external-secrets.io/v1alpha1
                              description: Specify the apiVersion of the generator
                                resource
                              type: string
                            kind:
                              description: Specify the Kind of the resource, e.g.
                                Password, ACRAccessToken etc.
                              type: string
                            name:
                              description: Specify the name of the generator resource
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        storeRef:
                          description: SecretStoreRef defines which SecretStore to
                            use for fetching the secret data.
                          properties:
                            kind:
                              description: Kind of the SecretStore resource (SecretStore
                                or ClusterSecretStore) Defaults to `SecretStore`
                              type: string
                            name:
                              description: Name of the SecretStore resource
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                  type: object
                type: array
              data:
                description: Data defines the connection between the Kubernetes Secret
                  keys and the Provider data
                items:
                  description: ExternalSecretData defines the connection between the
                    Kubernetes Secret key (spec.data.<key>) and the Provider data.
                  properties:
                    remoteRef:
                      description: RemoteRef points to the remote secret and defines
                        which secret (version/property/..) to fetch.
                      properties:
                        conversionStrategy:
                          default: Default
                          description: Used to define a conversion Strategy
                          enum:
                          - Default
                          - Unicode
                          type: string
                        decodingStrategy:
                          default: None
                          description: Used to define a decoding Strategy
                          enum:
                          - Auto
                          - Base64
                          - Base64URL
                          - None
                          type: string
                        key:
                          description: Key is the key used in the Provider, mandatory
                          type: string
                        metadataPolicy:
                          default: None
                          description: Policy for fetching tags/labels from provider
                            secrets, possible options are Fetch, None. Defaults to
                            None
                          enum:
                          - None
                          - Fetch
                          type: string
                        property:
                          description: Used to select a specific property of the Provider
                            value (if a map), if supported
                          type: string
                        version:
                          description: Used to select a specific version of the Provider
                            value, if supported
                          type: string
                      required:
                      - key
                      type: object
                    secretKey:
                      description: SecretKey defines the key in which the controller
                        stores the value. This is the key in the Kind=Secret
                      type: string
                    sourceRef:
                      description: SourceRef allows you to override the source from
                        which the value will be pulled from.
                      properties:
                        generatorRef:
                          description: GeneratorRef points to a generator custom resource.
                          properties:
                            apiVersion:
                              default: generators.external-secrets.io/v1alpha1
                              description: Specify the apiVersion of the generator
                                resource
                              type: string
                            kind:
                              description: Specify the Kind of the resource, e.g.
                                Password, ACRAccessToken etc.
                              type: string
                            name:
                              description: Specify the name of the generator resource
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        storeRef:
                          description: SecretStoreRef defines which SecretStore to
                            use for fetching the secret data.
                          properties:
                            kind:
                              description: Kind of the SecretStore resource (SecretStore
                                or ClusterSecretStore) Defaults to `SecretStore`
                              type: string
                            name:
                              description: Name of the SecretStore resource
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                  required:
                  - remoteRef
                  - secretKey
                  type: object
                type: array
              refreshInterval:
                default: 15s
                description: RefreshInterval is the amount of time before the values
                  are read again from the SecretStore provider Valid time units are
                  "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to
                  fetch and create it once. Defaults to 15s.
                type: string
              secretStoreRef:
                description: SecretStoreRef defines which SecretStore to use for fetching
                  the secret data.
                properties:
                  kind:
                    description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore)
                      Defaults to `SecretStore`
                    type: string
                  name:
                    description: Name of the SecretStore resource
                    type: string
                required:
                - name
                type: object
              target:
                default:
                  creationPolicy: Owner
                  deletionPolicy: Retain
                description: ExternalSecretTarget defines the Kubernetes Secret to
                  be created There can be only one target per ExternalSecret.
                properties:
                  creationPolicy:
                    default: Owner
                    description: CreationPolicy defines rules on how to create the
                      resulting Secret Defaults to 'Owner'
                    enum:
                    - Owner
                    - Orphan
                    - Merge
                    - None
                    type: string
                  deletionPolicy:
                    default: Retain
                    description: DeletionPolicy defines rules on how to delete the
                      resulting Secret Defaults to 'Retain'
                    enum:
                    - Delete
                    - Merge
                    - Retain
                    type: string
                  immutable:
                    description: Immutable defines if the final secret will be immutable
                    type: boolean
                  name:
                    description: Name defines the name of the Secret resource to be
                      managed This field is immutable Defaults to the .metadata.name
                      of the ExternalSecret resource
                    type: string
                  template:
                    description: Template defines a blueprint for the created Secret
                      resource.
                    properties:
                      data:
                        additionalProperties:
                          type: string
                        type: object
                      engineVersion:
                        default: v2
                        description: EngineVersion specifies the template engine version
                          that should be used to compile/execute the template specified
                          in .data and .templateFrom[].
                        enum:
                        - v1
                        - v2
                        type: string
                      mergePolicy:
                        default: Replace
                        description: MergePolicy defines how to merge template with
                          secret data
                        enum:
                        - Replace
                        - Merge
                        type: string
                      metadata:
                        description: ExternalSecretTemplateMetadata defines metadata
                          fields for the Secret blueprint.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      templateFrom:
                        items:
                          properties:
                            configMap:
                              properties:
                                items:
                                  items:
                                    properties:
                                      key:
                                        type: string
                                      templateAs:
                                        default: Values
                                        enum:
                                        - Values
                                        - KeysAndValues
                                        type: string
                                    required:
                                    - key
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            literal:
                              type: string
                            secret:
                              properties:
                                items:
                                  items:
                                    properties:
                                      key:
                                        type: string
                                      templateAs:
                                        default: Values
                                        enum:
                                        - Values
                                        - KeysAndValues
                                        type: string
                                    required:
                                    - key
                                    type: object
                                  type: array
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            target:
                              default: Data
                              enum:
                              - Data
                              - Annotations
                              - Labels
                              type: string
                          type: object
                        type: array
                      type:
                        type: string
                    type: object
                type: object
            required:
            - secretStoreRef
            type: object
          status:
            properties:
              binding:
                description: Binding represents a servicebinding.io Provisioned Service
                  reference to the secret
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              refreshTime:
                description: RefreshTime is the time and date the external secret
                  was fetched and the target secret updated
                format: date-time
                nullable: true
                type: string
              syncedResourceVersion:
                description: SyncedResourceVersion keeps track of the last synced
                  version
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: secretstores.external-secrets.io
spec:
  group: external-secrets.io
  names:
    categories:
    - externalsecrets
    kind: SecretStore
    listKind: SecretStoreList
    plural: secretstores
    shortNames:
    - ss
    singular: secretstore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SecretStore represents a secure external location for storing
          secrets, which can be referenced as part of `storeRef` fields.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretStoreSpec defines the desired state of SecretStore.
            properties:
              conditions:
                description: Used to constraint a ClusterSecretStore to specific namespaces.
                  Relevant only to ClusterSecretStore
                items:
                  description: ClusterSecretStoreCondition describes a condition by
                    which to choose namespaces to process ExternalSecrets in for a
                    ClusterSecretStore instance.
                  properties:
                    namespaceRegexes:
                      description: Choose namespace using regex
                      items:
                        type: string
                      type: array
                    namespaces:
                      description: Choose namespaces by name
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              controller:
                description: 'Used to select the correct ESO controller (think: ingress.ingressClassName)
                  The ESO controller is instantiated with a specific controller name
                  and filters ES based on this property'
                type: string
              provider:
                description: Used to configure the provider. Only one provider may
                  be set
                maxProperties: 1
                minProperties: 1
                properties:
                  akeyless:
                    description: Akeyless configures this store to sync secrets using
                      Akeyless Vault provider
                    properties:
                      akeylessGWApiURL:
                        description: Akeyless GW API Url from which the secrets to
                          be fetched from.
                        type: string
                      authSecretRef:
                        description: Auth configures how the operator authenticates
                          with Akeyless.
                        properties:
                          kubernetesAuth:
                            description: Kubernetes authenticates with Akeyless by
                              passing the ServiceAccount token stored in the named
                              Secret resource.
                            properties:
                              accessID:
                                description: the Akeyless Kubernetes auth-method access-id
                                type: string
                              k8sConfName:
                                description: Kubernetes-auth configuration name in
                                  Akeyless-Gateway
                                type: string
                              serviceAccountRef:
                                description: Optional service account field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Akeyless. If the service account selector is
                                  not supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim
                                      for the service account token If the service
                                      account uses a well-known annotation for e.g.
                                      IRSA or GCP Workload Identity then this audiences
                                      will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - accessID
                            - k8sConfName
                            type: object
                          secretRef:
                            description: Reference to a Secret that contains the details
                              to authenticate with Akeyless.
                            properties:
                              accessId:
                                description: The SecretAccessID is used for authentication
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              accessType:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              accessTypeParam:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      caBundle:
                        description: PEM/base64 encoded CA bundle used to validate
                          Akeyless Gateway certificate. Only used if the AkeylessGWApiURL
                          URL is using HTTPS protocol. If not set the system root
                          CA bundle is used to validate the TLS connection.
                        format: byte
                        type: string
                      caProvider:
                        description: The provider for the CA bundle to use to validate
                          Akeyless Gateway certificate.
                        properties:
                          key:
                            description: The key where the CA certificate can be found
                              in the Secret or ConfigMap.
                            type: string
                          name:
                            description: The name of the object located at the provider
                              type.
                            type: string
                          namespace:
                            description: The namespace the Provider type is in. Can
                              only be specified when used in a ClusterSecretStore.
                            type: string
                          type:
                            description: The type of provider to use such as "Secret",
                              or "ConfigMap".
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                        required:
                        - name
                        - type
                        type: object
                    required:
                    - akeylessGWApiURL
                    - authSecretRef
                    type: object
                  kubernetes:
                    description: Kubernetes configures this store to sync secrets
                      using a Kubernetes cluster provider
                    properties:
                      auth:
                        description: Auth configures how to authenticate with a Kubernetes
                          instance.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          cert:
                            description: has both clientCert and clientKey
                            properties:
                              clientCert:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              clientKey:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                          serviceAccount:
                            description: points to a service account that should be
                              used for authentication
                            properties:
                              audiences:
                                description: Audience specifies the `aud` claim for
                                  the service account token If the service account
                                  uses a well-known annotation for e.g. IRSA or GCP
                                  Workload Identity then this audiences will be appended
                                  to the list
                                items:
                                  type: string
                                type: array
                              name:
                                description: The name of the ServiceAccount resource
                                  being referred to.
                                type: string
                              namespace:
                                description: Namespace of the resource being referred
                                  to. Ignored if referent is not cluster-scoped.
                                  cluster-scoped defaults to the namespace of the
                                  referent.
                                type: string
                            required:
                            - name
                            type: object
                          token:
                            description: use static token to authenticate with
                            properties:
                              bearerToken:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      remoteNamespace:
                        default: default
                        description: Remote namespace to fetch the secrets from
                        type: string
                      server:
                        description: configures the Kubernetes server Address.
                        properties:
                          caBundle:
                            description: CABundle is a PEM-encoded CA certificate
                            format: byte
                            type: string
                          caProvider:
                            description: see caProvider in generic store
                            properties:
                              key:
                                description: The key where the CA certificate can be
                                  found in the Secret or ConfigMap.
                                type: string
                              name:
                                description: The name of the object located at the
                                  provider type.
                                type: string
                              namespace:
                                description: The namespace the Provider type is in.
                                  Can only be specified when used in a ClusterSecretStore.
                                type: string
                              type:
                                description: The type of provider to use such as "Secret",
                                  or "ConfigMap".
                                enum:
                                - Secret
                                - ConfigMap
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          url:
                            default: kubernetes.default.svc.cluster.local
                            description: configures the Kubernetes server Address.
                            type: string
                        type: object
                    required:
                    - auth
                    type: object
                  vault:
                    description: Vault configures this store to sync secrets using
                      Hashi provider
                    properties:
                      auth:
                        description: Auth configures how secret-manager authenticates
                          with the Vault server.
                        properties:
                          appRole:
                            description: AppRole authenticates with Vault using the
                              App Role auth mechanism, with the role and secret stored
                              in a Kubernetes Secret resource.
                            properties:
                              path:
                                default: approle
                                description: 'Path where the App Role authentication
                                  backend is mounted in Vault, e.g: "approle"'
                                type: string
                              roleId:
                                description: RoleID configured in the App Role authentication
                                  backend when setting up the authentication backend
                                  in Vault.
                                type: string
                              roleRef:
                                description: Reference to a key in a Secret that contains
                                  the App Role ID used to authenticate with Vault.
                                  The `key` field must be specified and denotes which
                                  entry within the Secret resource is used as the
                                  app role id.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              secretRef:
                                description: Reference to a key in a Secret that contains
                                  the App Role secret used to authenticate with Vault.
                                  The `key` field must be specified and denotes which
                                  entry within the Secret resource is used as the
                                  app role secret.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            required:
                            - path
                            - secretRef
                            type: object
                          cert:
                            description: Cert authenticates with TLS Certificates
                              by passing client certificate, private key and ca certificate
                              Cert authentication method
                            properties:
                              clientCert:
                                description: ClientCert is a certificate to authenticate
                                  using the Cert Vault authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing client private key to authenticate with
                                  Vault using the Cert authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                          iam:
                            description: Iam authenticates with vault by passing a
                              special STS token. The STS token is valid for 60 seconds,
                              and is generated using the AWS SDK (boto3).
                            properties:
                              externalId:
                                description: AWS External ID set on assumed role
                                type: string
                              jwt:
                                description: Specify a service account with IRSA enabled
                                properties:
                                  serviceAccountRef:
                                    description: A reference to a ServiceAccount resource.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud`
                                          claim for the service account token If the
                                          service account uses a well-known annotation
                                          for e.g. IRSA or GCP Workload Identity then
                                          this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount
                                          resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              path:
                                description: 'Path where the AWS auth method is enabled
                                  in Vault, e.g: "aws"'
                                type: string
                              region:
                                description: AWS region
                                type: string
                              role:
                                description: This is the AWS role to be assumed before
                                  talking to vault
                                type: string
                              secretRef:
                                description: Specify credentials in a Secret object
                                properties:
                                  accessKeyIDSecretRef:
                                    description: The AccessKeyID is used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                  sessionTokenSecretRef:
                                    description: 'The SessionToken used for authentication
                                      This must be defined if AccessKeyID and SecretAccessKey
                                      are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              vaultAwsIamServerID:
                                description: 'X-Vault-AWS-IAM-Server-ID is an additional
                                  header used by Vault IAM auth method to mitigate
                                  against different types of replay attacks. More
                                  details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                type: string
                              vaultRole:
                                description: Vault Role. In vault, a role describes
                                  an identity with a set of permissions, groups, or
                                  policies you want to attach a user of the secrets
                                  engine
                                type: string
                            required:
                            - vaultRole
                            type: object
                          jwt:
                            description: Jwt authenticates with Vault by passing role
                              and JWT token using the JWT/OIDC authentication method
                            properties:
                              kubernetesServiceAccountToken:
                                description: Optional ServiceAccount field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Vault. If the service account selector is not
                                  supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Optional audiences field that will
                                      be used to request a temporary Kubernetes service
                                      account token for the service account referenced
                                      by the `name` field. The value of this field
                                      should be a single audience for the Kubernetes
                                      TokenRequest API. The audience of the requested
                                      token is used by the Kubernetes API server audience
                                      validation to verify that the token is allowed
                                      to access the service account.
                                    items:
                                      type: string
                                    type: array
                                  expirationSeconds:
                                    description: Optional expiration time in seconds
                                      that will be used to request a temporary Kubernetes
                                      service account token for the service account
                                      referenced by the `name` field. The value of
                                      this field must be at least 600 seconds. The
                                      value of this field, when expressed in seconds,
                                      will set the aud claim of the requested service
                                      account token to a single audience of the Kubernetes
                                      API server. The resulting service account token
                                      will be stored in the resulting secret.
                                    format: int64
                                    type: integer
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                              path:
                                default: jwt
                                description: 'Path where the JWT authentication backend
                                  is mounted in Vault, e.g: "jwt"'
                                type: string
                              role:
                                description: Role is a JWT role to authenticate using
                                  the JWT/OIDC Vault authentication method
                                type: string
                              secretRef:
                                description: Optional SecretRef that refers to a key
                                  in a Secret resource containing JWT token to authenticate
                                  with Vault using the JWT/OIDC authentication method.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            required:
                            - path
                            type: object
                          kubernetes:
                            description: Kubernetes authenticates with Vault by passing
                              the ServiceAccount token stored in the named Secret
                              resource to the Vault server.
                            properties:
                              mountPath:
                                default: kubernetes
                                description: 'Path where the Kubernetes authentication
                                  backend is mounted in Vault, e.g: "kubernetes"'
                                type: string
                              role:
                                description: A required field containing the Vault
                                  Role to assume. A Role binds a Kubernetes ServiceAccount
                                  with a set of Vault policies.
                                type: string
                              secretRef:
                                description: Optional secret field containing a Kubernetes
                                  ServiceAccount JWT used for authenticating with
                                  Vault. If a name is specified without a key, `token`
                                  is the default. If one is not specified, the one
                                  bound to the controller will be used.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              serviceAccountRef:
                                description: Optional service account field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Vault. If the service account selector is not
                                  supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim
                                      for the service account token If the service
                                      account uses a well-known annotation for e.g.
                                      IRSA or GCP Workload Identity then this audiences
                                      will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - mountPath
                            - role
                            type: object
                          ldap:
                            description: Ldap authenticates with Vault by passing username/password
                              pair using the LDAP authentication method
                            properties:
                              path:
                                default: ldap
                                description: 'Path where the LDAP authentication backend
                                  is mounted in Vault, e.g: "ldap"'
                                type: string
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing password for the LDAP user used to authenticate
                                  with Vault using the LDAP authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              username:
                                description: Username is a LDAP user name used to
                                  authenticate with the LDAP Vault authentication
                                  method
                                type: string
                            required:
                            - path
                            - username
                            type: object
                          tokenSecretRef:
                            description: TokenSecretRef authenticates with Vault by
                              presenting a token.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: The name of the Secret resource being
                                  referred to.
                                type: string
                              namespace:
                                description: Namespace of the resource being referred
                                  to. Ignored if referent is not cluster-scoped.
                                  cluster-scoped defaults to the namespace of the
                                  referent.
                                type: string
                            type: object
                          userPass:
                            description: UserPass authenticates with Vault by passing
                              username/password pair
                            properties:
                              path:
                                default: userpass
                                description: 'Path where the UserPassword authentication
                                  backend is mounted in Vault, e.g: "user"'
                                type: string
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing password for the user used to authenticate
                                  with Vault using the UserPass authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              username:
                                description: Username is a user name used to authenticate
                                  with the UserPass Vault authentication method
                                type: string
                            required:
                            - path
                            - username
                            type: object
                        type: object
                      caBundle:
                        description: PEM encoded CA bundle used to validate Vault
                          server certificate. Only used if the Server URL is using
                          HTTPS protocol. This parameter is ignored for plain HTTP
                          protocol connection. If not set the system root CA bundle
                          is used to validate the TLS connection.
                        format: byte
                        type: string
                      caProvider:
                        description: The provider for the CA bundle to use to validate
                          Vault server certificate.
                        properties:
                          key:
                            description: The key where the CA certificate can be found
                              in the Secret or ConfigMap.
                            type: string
                          name:
                            description: The name of the object located at the provider
                              type.
                            type: string
                          namespace:
                            description: The namespace the Provider type is in. Can
                              only be specified when used in a ClusterSecretStore.
                            type: string
                          type:
                            description: The type of provider to use such as "Secret",
                              or "ConfigMap".
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      forwardInconsistent:
                        description: ForwardInconsistent tells Vault to forward read-after-write
                          requests to the Vault leader instead of simply retrying
                          within a loop. This can increase performance if the option
                          is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                        type: boolean
                      namespace:
                        description: 'Name of the vault namespace. Namespaces is a
                          set of features within Vault Enterprise that allows Vault
                          environments to support Secure Multi-tenancy. e.g: "ns1".
                          More information about it here: https://www.vaultproject.io/docs/enterprise/namespaces'
                        type: string
                      path:
                        description: 'Path is the mount path of the Vault KV backend
                          endpoint, e.g: "secret". The v2 KV secret engine is assumed
                          for now, see: https://www.vaultproject.io/docs/secrets/kv/kv-v2.html'
                        type: string
                      readYourWrites:
                        description: ReadYourWrites ensures isolated read-after-write
                          semantics by providing discovered cluster replication states
                          in each request. More information about it here: https://www.vaultproject.io/docs/enterprise/consistency
                        type: boolean
                      server:
                        description: 'Server is the connection address for the Vault
                          server, e.g: "https://vault.example.com:8200".'
                        type: string
                      version:
                        default: v2
                        description: Version is the Vault KV secret engine version.
                          This can be either "v1" or "v2". Version defaults to "v2".
                        enum:
                        - v1
                        - v2
                        type: string
                    required:
                    - auth
                    - server
                    type: object
                type: object
              refreshInterval:
                default: 1m
                description: Used to configure store refresh interval in seconds.
                  Empty or 0 will default to the controller config.
                type: string
              retrySettings:
                description: Used to configure http retries if failed
                properties:
                  maxRetries:
                    format: int32
                    type: integer
                  retryInterval:
                    type: string
                type: object
            required:
            - provider
            type: object
          status:
            description: SecretStoreStatus defines the observed state of the SecretStore.
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clustersecretstores.external-secrets.io
spec:
  group: external-secrets.io
  names:
    categories:
    - externalsecrets
    kind: ClusterSecretStore
    listKind: ClusterSecretStoreList
    plural: clustersecretstores
    shortNames:
    - css
    singular: clustersecretstore
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Status
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].reason
      name: Ready
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterSecretStore represents a secure external location for
          storing secrets, which can be referenced as part of `storeRef` fields.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretStoreSpec defines the desired state of SecretStore.
            properties:
              conditions:
                description: Used to constraint a ClusterSecretStore to specific namespaces.
                  Relevant only to ClusterSecretStore
                items:
                  description: ClusterSecretStoreCondition describes a condition by
                    which to choose namespaces to process ExternalSecrets in for a
                    ClusterSecretStore instance.
                  properties:
                    namespaceRegexes:
                      description: Choose namespace using regex
                      items:
                        type: string
                      type: array
                    namespaces:
                      description: Choose namespaces by name
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              controller:
                description: 'Used to select the correct ESO controller (think: ingress.ingressClassName)
                  The ESO controller is instantiated with a specific controller name
                  and filters ES based on this property'
                type: string
              provider:
                description: Used to configure the provider. Only one provider may
                  be set
                maxProperties: 1
                minProperties: 1
                properties:
                  akeyless:
                    description: Akeyless configures this store to sync secrets using
                      Akeyless Vault provider
                    properties:
                      akeylessGWApiURL:
                        description: Akeyless GW API Url from which the secrets to
                          be fetched from.
                        type: string
                      authSecretRef:
                        description: Auth configures how the operator authenticates
                          with Akeyless.
                        properties:
                          kubernetesAuth:
                            description: Kubernetes authenticates with Akeyless by
                              passing the ServiceAccount token stored in the named
                              Secret resource.
                            properties:
                              accessID:
                                description: the Akeyless Kubernetes auth-method access-id
                                type: string
                              k8sConfName:
                                description: Kubernetes-auth configuration name in
                                  Akeyless-Gateway
                                type: string
                              serviceAccountRef:
                                description: Optional service account field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Akeyless. If the service account selector is
                                  not supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim
                                      for the service account token If the service
                                      account uses a well-known annotation for e.g.
                                      IRSA or GCP Workload Identity then this audiences
                                      will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - accessID
                            - k8sConfName
                            type: object
                          secretRef:
                            description: Reference to a Secret that contains the details
                              to authenticate with Akeyless.
                            properties:
                              accessId:
                                description: The SecretAccessID is used for authentication
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              accessType:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              accessTypeParam:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      caBundle:
                        description: PEM/base64 encoded CA bundle used to validate
                          Akeyless Gateway certificate. Only used if the AkeylessGWApiURL
                          URL is using HTTPS protocol. If not set the system root
                          CA bundle is used to validate the TLS connection.
                        format: byte
                        type: string
                      caProvider:
                        description: The provider for the CA bundle to use to validate
                          Akeyless Gateway certificate.
                        properties:
                          key:
                            description: The key where the CA certificate can be found
                              in the Secret or ConfigMap.
                            type: string
                          name:
                            description: The name of the object located at the provider
                              type.
                            type: string
                          namespace:
                            description: The namespace the Provider type is in. Can
                              only be specified when used in a ClusterSecretStore.
                            type: string
                          type:
                            description: The type of provider to use such as "Secret",
                              or "ConfigMap".
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                        required:
                        - name
                        - type
                        type: object
                    required:
                    - akeylessGWApiURL
                    - authSecretRef
                    type: object
                  kubernetes:
                    description: Kubernetes configures this store to sync secrets
                      using a Kubernetes cluster provider
                    properties:
                      auth:
                        description: Auth configures how to authenticate with a Kubernetes
                          instance.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          cert:
                            description: has both clientCert and clientKey
                            properties:
                              clientCert:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              clientKey:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                          serviceAccount:
                            description: points to a service account that should be
                              used for authentication
                            properties:
                              audiences:
                                description: Audience specifies the `aud` claim for
                                  the service account token If the service account
                                  uses a well-known annotation for e.g. IRSA or GCP
                                  Workload Identity then this audiences will be appended
                                  to the list
                                items:
                                  type: string
                                type: array
                              name:
                                description: The name of the ServiceAccount resource
                                  being referred to.
                                type: string
                              namespace:
                                description: Namespace of the resource being referred
                                  to. Ignored if referent is not cluster-scoped.
                                  cluster-scoped defaults to the namespace of the
                                  referent.
                                type: string
                            required:
                            - name
                            type: object
                          token:
                            description: use static token to authenticate with
                            properties:
                              bearerToken:
                                description: A reference to a specific 'key' within
                                  a Secret resource, In some instances, `key` is a
                                  required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      remoteNamespace:
                        default: default
                        description: Remote namespace to fetch the secrets from
                        type: string
                      server:
                        description: configures the Kubernetes server Address.
                        properties:
                          caBundle:
                            description: CABundle is a PEM-encoded CA certificate
                            format: byte
                            type: string
                          caProvider:
                            description: see caProvider in generic store
                            properties:
                              key:
                                description: The key where the CA certificate can be
                                  found in the Secret or ConfigMap.
                                type: string
                              name:
                                description: The name of the object located at the
                                  provider type.
                                type: string
                              namespace:
                                description: The namespace the Provider type is in.
                                  Can only be specified when used in a ClusterSecretStore.
                                type: string
                              type:
                                description: The type of provider to use such as "Secret",
                                  or "ConfigMap".
                                enum:
                                - Secret
                                - ConfigMap
                                type: string
                            required:
                            - name
                            - type
                            type: object
                          url:
                            default: kubernetes.default.svc.cluster.local
                            description: configures the Kubernetes server Address.
                            type: string
                        type: object
                    required:
                    - auth
                    type: object
                  vault:
                    description: Vault configures this store to sync secrets using
                      Hashi provider
                    properties:
                      auth:
                        description: Auth configures how secret-manager authenticates
                          with the Vault server.
                        properties:
                          appRole:
                            description: AppRole authenticates with Vault using the
                              App Role auth mechanism, with the role and secret stored
                              in a Kubernetes Secret resource.
                            properties:
                              path:
                                default: approle
                                description: 'Path where the App Role authentication
                                  backend is mounted in Vault, e.g: "approle"'
                                type: string
                              roleId:
                                description: RoleID configured in the App Role authentication
                                  backend when setting up the authentication backend
                                  in Vault.
                                type: string
                              roleRef:
                                description: Reference to a key in a Secret that contains
                                  the App Role ID used to authenticate with Vault.
                                  The `key` field must be specified and denotes which
                                  entry within the Secret resource is used as the
                                  app role id.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              secretRef:
                                description: Reference to a key in a Secret that contains
                                  the App Role secret used to authenticate with Vault.
                                  The `key` field must be specified and denotes which
                                  entry within the Secret resource is used as the
                                  app role secret.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            required:
                            - path
                            - secretRef
                            type: object
                          cert:
                            description: Cert authenticates with TLS Certificates
                              by passing client certificate, private key and ca certificate
                              Cert authentication method
                            properties:
                              clientCert:
                                description: ClientCert is a certificate to authenticate
                                  using the Cert Vault authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing client private key to authenticate with
                                  Vault using the Cert authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            type: object
                          iam:
                            description: Iam authenticates with vault by passing a
                              special STS token. The STS token is valid for 60 seconds,
                              and is generated using the AWS SDK (boto3).
                            properties:
                              externalId:
                                description: AWS External ID set on assumed role
                                type: string
                              jwt:
                                description: Specify a service account with IRSA enabled
                                properties:
                                  serviceAccountRef:
                                    description: A reference to a ServiceAccount resource.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud`
                                          claim for the service account token If the
                                          service account uses a well-known annotation
                                          for e.g. IRSA or GCP Workload Identity then
                                          this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount
                                          resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                type: object
                              path:
                                description: 'Path where the AWS auth method is enabled
                                  in Vault, e.g: "aws"'
                                type: string
                              region:
                                description: AWS region
                                type: string
                              role:
                                description: This is the AWS role to be assumed before
                                  talking to vault
                                type: string
                              secretRef:
                                description: Specify credentials in a Secret object
                                properties:
                                  accessKeyIDSecretRef:
                                    description: The AccessKeyID is used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                  secretAccessKeySecretRef:
                                    description: The SecretAccessKey is used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                  sessionTokenSecretRef:
                                    description: 'The SessionToken used for authentication
                                      This must be defined if AccessKeyID and SecretAccessKey
                                      are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret
                                          resource's `data` field to be used. Some
                                          instances of this field may be defaulted,
                                          in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource
                                          being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being
                                          referred to. Ignored if referent is not
                                          cluster-scoped. cluster-scoped defaults
                                          to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              vaultAwsIamServerID:
                                description: 'X-Vault-AWS-IAM-Server-ID is an additional
                                  header used by Vault IAM auth method to mitigate
                                  against different types of replay attacks. More
                                  details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                type: string
                              vaultRole:
                                description: Vault Role. In vault, a role describes
                                  an identity with a set of permissions, groups, or
                                  policies you want to attach a user of the secrets
                                  engine
                                type: string
                            required:
                            - vaultRole
                            type: object
                          jwt:
                            description: Jwt authenticates with Vault by passing role
                              and JWT token using the JWT/OIDC authentication method
                            properties:
                              kubernetesServiceAccountToken:
                                description: Optional ServiceAccount field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Vault. If the service account selector is not
                                  supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Optional audiences field that will
                                      be used to request a temporary Kubernetes service
                                      account token for the service account referenced
                                      by the `name` field. The value of this field
                                      should be a single audience for the Kubernetes
                                      TokenRequest API. The audience of the requested
                                      token is used by the Kubernetes API server audience
                                      validation to verify that the token is allowed
                                      to access the service account.
                                    items:
                                      type: string
                                    type: array
                                  expirationSeconds:
                                    description: Optional expiration time in seconds
                                      that will be used to request a temporary Kubernetes
                                      service account token for the service account
                                      referenced by the `name` field. The value of
                                      this field must be at least 600 seconds. The
                                      value of this field, when expressed in seconds,
                                      will set the aud claim of the requested service
                                      account token to a single audience of the Kubernetes
                                      API server. The resulting service account token
                                      will be stored in the resulting secret.
                                    format: int64
                                    type: integer
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                              path:
                                default: jwt
                                description: 'Path where the JWT authentication backend
                                  is mounted in Vault, e.g: "jwt"'
                                type: string
                              role:
                                description: Role is a JWT role to authenticate using
                                  the JWT/OIDC Vault authentication method
                                type: string
                              secretRef:
                                description: Optional SecretRef that refers to a key
                                  in a Secret resource containing JWT token to authenticate
                                  with Vault using the JWT/OIDC authentication method.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                            required:
                            - path
                            type: object
                          kubernetes:
                            description: Kubernetes authenticates with Vault by passing
                              the ServiceAccount token stored in the named Secret
                              resource to the Vault server.
                            properties:
                              mountPath:
                                default: kubernetes
                                description: 'Path where the Kubernetes authentication
                                  backend is mounted in Vault, e.g: "kubernetes"'
                                type: string
                              role:
                                description: A required field containing the Vault
                                  Role to assume. A Role binds a Kubernetes ServiceAccount
                                  with a set of Vault policies.
                                type: string
                              secretRef:
                                description: Optional secret field containing a Kubernetes
                                  ServiceAccount JWT used for authenticating with
                                  Vault. If a name is specified without a key, `token`
                                  is the default. If one is not specified, the one
                                  bound to the controller will be used.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              serviceAccountRef:
                                description: Optional service account field containing
                                  the name of a kubernetes ServiceAccount. If the
                                  service account is specified, the service account
                                  secret token JWT will be used for authenticating
                                  with Vault. If the service account selector is not
                                  supplied, the secretRef will be used instead.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim
                                      for the service account token If the service
                                      account uses a well-known annotation for e.g.
                                      IRSA or GCP Workload Identity then this audiences
                                      will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource
                                      being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                required:
                                - name
                                type: object
                            required:
                            - mountPath
                            - role
                            type: object
                          ldap:
                            description: Ldap authenticates with Vault by passing username/password
                              pair using the LDAP authentication method
                            properties:
                              path:
                                default: ldap
                                description: 'Path where the LDAP authentication backend
                                  is mounted in Vault, e.g: "ldap"'
                                type: string
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing password for the LDAP user used to authenticate
                                  with Vault using the LDAP authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              username:
                                description: Username is a LDAP user name used to
                                  authenticate with the LDAP Vault authentication
                                  method
                                type: string
                            required:
                            - path
                            - username
                            type: object
                          tokenSecretRef:
                            description: TokenSecretRef authenticates with Vault by
                              presenting a token.
                            properties:
                              key:
                                description: The key of the entry in the Secret resource's
                                  `data` field to be used. Some instances of this
                                  field may be defaulted, in others it may be required.
                                type: string
                              name:
                                description: The name of the Secret resource being
                                  referred to.
                                type: string
                              namespace:
                                description: Namespace of the resource being referred
                                  to. Ignored if referent is not cluster-scoped.
                                  cluster-scoped defaults to the namespace of the
                                  referent.
                                type: string
                            type: object
                          userPass:
                            description: UserPass authenticates with Vault by passing
                              username/password pair
                            properties:
                              path:
                                default: userpass
                                description: 'Path where the UserPassword authentication
                                  backend is mounted in Vault, e.g: "user"'
                                type: string
                              secretRef:
                                description: SecretRef to a key in a Secret resource
                                  containing password for the user used to authenticate
                                  with Vault using the UserPass authentication method
                                properties:
                                  key:
                                    description: The key of the entry in the Secret
                                      resource's `data` field to be used. Some instances
                                      of this field may be defaulted, in others it
                                      may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being
                                      referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred
                                      to. Ignored if referent is not cluster-scoped.
                                      cluster-scoped defaults to the namespace of
                                      the referent.
                                    type: string
                                type: object
                              username:
                                description: Username is a user name used to authenticate
                                  with the UserPass Vault authentication method
                                type: string
                            required:
                            - path
                            - username
                            type: object
                        type: object
                      caBundle:
                        description: PEM encoded CA bundle used to validate Vault
                          server certificate. Only used if the Server URL is using
                          HTTPS protocol. This parameter is ignored for plain HTTP
                          protocol connection. If not set the system root CA bundle
                          is used to validate the TLS connection.
                        format: byte
                        type: string
                      caProvider:
                        description: The provider for the CA bundle to use to validate
                          Vault server certificate.
                        properties:
                          key:
                            description: The key where the CA certificate can be found
                              in the Secret or ConfigMap.
                            type: string
                          name:
                            description: The name of the object located at the provider
                              type.
                            type: string
                          namespace:
                            description: The namespace the Provider type is in. Can
                              only be specified when used in a ClusterSecretStore.
                            type: string
                          type:
                            description: The type of provider to use such as "Secret",
                              or "ConfigMap".
                            enum:
                            - Secret
                            - ConfigMap
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      forwardInconsistent:
                        description: ForwardInconsistent tells Vault to forward read-after-write
                          requests to the Vault leader instead of simply retrying
                          within a loop. This can increase performance if the option
                          is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                        type: boolean
                      namespace:
                        description: 'Name of the vault namespace. Namespaces is a
                          set of features within Vault Enterprise that allows Vault
                          environments to support Secure Multi-tenancy. e.g: "ns1".
                          More information about it here: https://www.vaultproject.io/docs/enterprise/namespaces'
                        type: string
                      path:
                        description: 'Path is the mount path of the Vault KV backend
                          endpoint, e.g: "secret". The v2 KV secret engine is assumed
                          for now, see: https://www.vaultproject.io/docs/secrets/kv/kv-v2.html'
                        type: string
                      readYourWrites:
                        description: ReadYourWrites ensures isolated read-after-write
                          semantics by providing discovered cluster replication states
                          in each request. More information about it here: https://www.vaultproject.io/docs/enterprise/consistency
                        type: boolean
                      server:
                        description: 'Server is the connection address for the Vault
                          server, e.g: "https://vault.example.com:8200".'
                        type: string
                      version:
                        default: v2
                        description: Version is the Vault KV secret engine version.
                          This can be either "v1" or "v2". Version defaults to "v2".
                        enum:
                        - v1
                        - v2
                        type: string
                    required:
                    - auth
                    - server
                    type: object
                type: object
              refreshInterval:
                default: 1m
                description: Used to configure store refresh interval in seconds.
                  Empty or 0 will default to the controller config.
                type: string
              retrySettings:
                description: Used to configure http retries if failed
                properties:
                  maxRetries:
                    format: int32
                    type: integer
                  retryInterval:
                    type: string
                type: object
            required:
            - provider
            type: object
          status:
            description: SecretStoreStatus defines the observed state of the SecretStore.
            properties:
              conditions:
                items:
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}