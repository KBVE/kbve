apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kilobase-api
  namespace: kilobase
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://discord.sh"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, Keep-Alive, X-Requested-With, If-Modified-Since, x-supabase-api-version, x-client-info, apikey"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: api.kbve.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-kong-proxy
            port:
              number: 80
  - host: supabase.kbve.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kong-kong-proxy
            port:
              number: 80
  tls:
  - hosts:
    - api.kbve.com
    - supabase.kbve.com
    secretName: kilobase-api-tls