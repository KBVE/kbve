---
import Layout from 'src/layouts/core/Layout.astro';

const pageTitle: string = `Discord | KBVE`;
const pageDescription: string = `Join our Discord | KBVE.com Community`;

export interface Props {
	backgroundImage?: string;
	title?: string;
	subtitle?: string;
	elevation?: string;
	buttonText?: string;
	onClick?: string;
	badge?: string;
	buttonHref?: string;
	description?: string;
}

const {
	backgroundImage = 'https://images.unsplash.com/photo-1636487658623-eb8f5ae60770?q=80&w=2072&auto=format&fit=crop&',
	title = 'KBVE Discord',
	subtitle = 'Come Join',
	elevation = '400+ Members',
	description = pageDescription,
	buttonText = 'Join Now',
	badge = 'Live & Async',
	buttonHref = 'https://discord.gg/4WmJSHMZAg',
	onClick = '#',
} = Astro.props;

const svg = `
<svg class="absolute inset-0 w-full h-full z-0 pointer-events-none" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid slice" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <radialGradient id="pulseGradient" cx="50%" cy="50%" r="50%">
      <stop offset="0%" stop-color="rgba(103,232,249,0.3)" />
      <stop offset="200%" stop-color="rgba(192,132,252,0)" />
    </radialGradient>
  </defs>

  <circle cx="50" cy="50" r="45" fill="url(#pulseGradient)">
    <animate attributeName="r" values="40;50;40" dur="6s" repeatCount="indefinite" />
  </circle>

  <g transform="translate(50, 50)">
    <circle r="35" fill="none" stroke="rgba(103,232,249,0.2)" stroke-width="0.5">
      <animateTransform attributeName="transform" type="rotate" from="0" to="360" dur="20s" repeatCount="indefinite" />
    </circle>
    <circle r="25" fill="none" stroke="rgba(192,132,252,0.2)" stroke-width="0.5">
      <animateTransform attributeName="transform" type="rotate" from="360" to="0" dur="30s" repeatCount="indefinite" />
    </circle>
  </g>
</svg>
`;

//         <Fragment set:html={svg} />

import DiscordSVG from 'src/layouts/components/panel/DiscordSVG.astro';
---

<Layout
	title={pageTitle}
	structuredData={{
		'@context': 'https://schema.org',
		'@type': 'WebPage',
		'@id': 'https://kbve.com/discord',
		url: 'https://kbve.com/discord',
		name: `${pageTitle}`,
		description: `{${pageDescription}}`,
		isPartOf: {
			'@type': 'WebSite',
			url: 'https://kbve.com',
			name: 'Kilo Byte Virtual Engine',
			description:
				'Elevate your efficiency with KBVE, Kilobyte Virtual Engine! Discover cutting-edge software and automation solutions designed to streamline and enhance your projects. Let’s innovate together!',
		},
		inLanguage: 'en-US',
	}}>
	<section class="px-6 py-12 sm:px-8 lg:px-12">
		<div
			class="mx-auto max-w-7xl relative flex flex-col md:flex-row rounded-3xl bg-white/5 backdrop-blur-md ring-1 ring-white/10
          shadow-[inset_0_0_0.5px_rgba(255,255,255,0.15),inset_0_1px_0_rgba(255,255,255,0.08),0_20px_40px_rgba(0,0,0,0.4)]
          hover:shadow-[inset_0_0_1px_rgba(255,255,255,0.2),inset_0_2px_1px_rgba(255,255,255,0.1),0_30px_60px_rgba(0,0,0,0.5)]
          transition-all duration-300 overflow-hidden ring-offset-1 ring-offset-white/5 hover:ring-4">
			<!-- Left Block -->
			<div class="p-8 flex-1 space-y-5">
				<!-- Badge -->
				<div
					class="inline-flex items-center gap-2 text-xs font-semibold bg-cyan-300/90 text-cyan-950 px-3 py-1 rounded-full shadow border border-white/30">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="w-4 h-4"
						fill="currentColor"
						viewBox="0 0 24 24">
						<circle cx="12" cy="12" r="10"></circle>
					</svg>
					{badge}
				</div>

				<!-- Title -->
				<h2 class="text-3xl sm:text-4xl font-bold text-white">
					{title}
				</h2>
				<p class="text-base text-zinc-300">{subtitle}</p>

				<!-- Description -->
				<div
					class="mt-6 border-t border-white/10 pt-6 text-base leading-relaxed text-zinc-300">
					{description}
				</div>

				<!-- Button -->
				<a
					href={buttonHref}
					class="inline-block mt-6 bg-gradient-to-br from-cyan-400 to-cyan-500 text-zinc-500 font-semibold py-2 px-6 rounded-full shadow-md text-sm tracking-wide
              hover:from-cyan-300 hover:to-cyan-400 hover:-translate-y-1
              active:from-cyan-500 active:to-cyan-600 active:translate-y-0 transition-all duration-200 ease-in-out">
					{buttonText}
				</a>
			</div>

			<!-- Right Block: Discord Embed -->
			<div
				class="hidden md:block w-1/2 relative rounded-r-3xl overflow-hidden border-l border-white/10 backdrop-blur-xl">
				<div class="absolute inset-0 bg-cyan-900/30 z-0"></div>
				<iframe
					class="relative z-10 w-full h-full min-h-[400px]"
					src="https://discord.com/widget?id=342732838598082562&theme=dark"
					allowtransparency="true"
					sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"
					title="KBVE Discord Widget">
				</iframe>
				<svg
					class="absolute top-4 right-4 w-20 h-20 text-cyan-400/20 z-20"
					viewBox="0 0 100 100"
					fill="none">
					<circle
						cx="50"
						cy="50"
						r="45"
						stroke="currentColor"
						stroke-width="2">
					</circle>
					<circle
						cx="50"
						cy="50"
						r="35"
						stroke="currentColor"
						stroke-width="1.5">
					</circle>
				</svg>
			</div>
		</div>
	</section>

	<DiscordSVG />

	<section class="px-6 py-6 sm:px-8 lg:px-12">
		<div
			class="mx-auto max-w-7xl grid grid-cols-1 sm:grid-cols-2 gap-6 md:gap-8 rounded-3xl bg-white/5 backdrop-blur-md ring-1 ring-white/10
          shadow-[inset_0_0_0.5px_rgba(255,255,255,0.15),inset_0_1px_0_rgba(255,255,255,0.08),0_20px_40px_rgba(0,0,0,0.4)]
          hover:shadow-[0_0_0_3px_rgba(103,232,249,0.6),0_0_35px_12px_rgba(192,132,252,0.35)]
          transition-all duration-300 ring-offset-1 ring-offset-white/5 p-8">
			<!-- Panel Block -->
			{
				[
					{
						title: 'Community Projects',
						icon: '🧠',
						desc: 'Explore and contribute to open-source tools and bots.',
					},
					{
						title: 'Voice Channels',
						icon: '🎙️',
						desc: 'Chill, chat, or scrim — voice channels always active.',
					},
					{
						title: 'Movie Night',
						icon: '💀',
						desc: 'We just watch Blackberry on repeat. We are from waterloo, where the vampires hang out!',
					},
					{
						title: 'Support & Help',
						icon: '🛠️',
						desc: 'Stuck with code or config? We’ve got you covered.',
					},
				].map((item) => (
					<div class="flex flex-col justify-between rounded-2xl p-6 bg-white/5 border border-white/10 shadow-inner hover:shadow-lg hover:shadow-cyan-500/20 transition duration-300">
						<div class="flex items-center gap-4">
							<div class="text-3xl">{item.icon}</div>
							<h3 class="text-lg font-semibold text-white">
								{item.title}
							</h3>
						</div>
						<p class="mt-4 text-sm text-zinc-300">{item.desc}</p>
					</div>
				))
			}
		</div>
	</section>

	<!-- Lottie Panel -->

	<section class="px-6 py-12 sm:px-8 lg:px-12">
		<div
			class="mx-auto max-w-7xl relative flex flex-col md:flex-row rounded-3xl bg-white/5 backdrop-blur-md ring-1 ring-white/10
          shadow-[inset_0_0_0.5px_rgba(255,255,255,0.15),inset_0_1px_0_rgba(255,255,255,0.08),0_20px_40px_rgba(0,0,0,0.4)]
          hover:shadow-[0_0_0_3px_rgba(103,232,249,0.6),0_0_35px_12px_rgba(192,132,252,0.35)]
          transition-all duration-300 overflow-hidden ring-offset-1 ring-offset-white/5">
			<!-- Inner Block -->
			<div
				class="absolute inset-[14px] rounded-[1.375rem] pointer-events-none z-10
         border border-[rgba(34,211,238,0.1)]
         shadow-[inset_0.5px_0.5px_1.5px_rgba(186,230,253,0.6),inset_-1px_-1px_1px_rgba(21,94,117,0.5),inset_3px_3px_6px_rgba(0,0,0,0.25)]
         translate-z-[30px] transform-style-3d">
         
			</div>

            
			<!-- Left Block: Lottie Canvas -->
			<div
				class="w-full md:w-1/2 flex items-center justify-center p-6 bg-white/5 backdrop-blur-lg border-r border-white/10">
				<canvas
					id="discord-canvas"
					width="300"
					height="300"
					class="w-full max-w-[300px] aspect-square">
				</canvas>
                <Fragment set:html={svg} />
			</div>

			<!-- Right Block: Panel Content -->
			<div class="w-full md:w-1/2 p-8 space-y-5">
				<div
					class="inline-flex items-center gap-2 text-xs font-semibold bg-cyan-300/20 text-cyan-500 px-3 py-1 rounded-full shadow border border-white/30">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						class="w-4 h-4"
						fill="currentColor"
						viewBox="0 0 24 24">
						<circle cx="12" cy="12" r="10"></circle>
					</svg>
					AI Companion
				</div>

				<h2 class="text-3xl sm:text-4xl font-bold text-white">
					Interact with KBVE's AI
				</h2>
				<p class="text-base text-zinc-300">
					Ask questions, explore features, or watch it dance. Our
					animated assistant is here to help and entertain.
				</p>

				<div
					class="mt-6 border-t border-white/10 pt-6 text-base leading-relaxed text-zinc-300">
					Powered by Lottie and runs in your browser. Give it a try —
					it's fast, responsive, and totally private.
				</div>

				<a
					href="#"
					class="inline-block mt-6 bg-gradient-to-br from-purple-400 to-purple-500 text-white font-semibold py-2 px-6 rounded-full shadow-md text-sm tracking-wide
              hover:from-purple-300 hover:to-purple-400 hover:-translate-y-1
              active:from-purple-500 active:to-purple-600 active:translate-y-0 transition-all duration-200 ease-in-out">
					Try the Demo
				</a>
			</div>
		</div>

		<!-- Lottie Loader Script -->
		<script is:inline type="module">
			import { DotLottieWorker } from 'https://cdn.jsdelivr.net/npm/@lottiefiles/dotlottie-web@0.44.0/+esm';

			function initLottie() {
				const canvas = document.getElementById('discord-canvas');
				if (!canvas || canvas.dataset.lottieInit === 'true') return;

				canvas.dataset.lottieInit = 'true';

				new DotLottieWorker({
					canvas: canvas,
					src: 'https://kbve.com/assets/lottie/holydance.lottie',
					autoplay: true,
					loop: true,
				});
			}

			document.addEventListener('astro:page-load', () => {
				let attempts = 0;
				const maxAttempts = 200;
				const delay = 200;

				const tryInit = () => {
					const canvas = document.getElementById('discord-canvas');
					if (canvas) {
						initLottie();
					} else if (attempts++ < maxAttempts) {
						requestAnimationFrame(() => {
							setTimeout(tryInit, delay);
						});
					} else {
						console.warn(
							'[Lottie] Failed to initialize after max attempts.'
						);
					}
				};

				tryInit();
			});
		</script>
	</section>
</Layout>
