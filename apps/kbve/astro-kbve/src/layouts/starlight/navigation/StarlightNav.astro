---
import ReactNavigationBar from './ReactNavigationBar.tsx';
---

<style>
  @keyframes shimmer {
    0% {
      background-position: -200% 0;
    }
    100% {
      background-position: 200% 0;
    }
  }

  @keyframes pulse-subtle {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.5;
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(4px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .shimmer-bg {
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.08) 50%,
      transparent 100%
    );
    background-size: 200% 100%;
    animation: shimmer 2.5s infinite linear;
  }

  .skeleton-item {
    position: relative;
    background: linear-gradient(
      135deg,
      rgba(156, 163, 175, 0.15) 0%,
      rgba(156, 163, 175, 0.25) 100%
    );
    animation: pulse-subtle 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .dark .skeleton-item {
    background: linear-gradient(
      135deg,
      rgba(75, 85, 99, 0.3) 0%,
      rgba(75, 85, 99, 0.4) 100%
    );
  }

  .skeleton-separator {
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(156, 163, 175, 0.3) 50%,
      transparent 100%
    );
  }

  .dark .skeleton-separator {
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(75, 85, 99, 0.5) 50%,
      transparent 100%
    );
  }

  .skeleton-status {
    background: linear-gradient(
      135deg,
      rgba(156, 163, 175, 0.2) 0%,
      rgba(156, 163, 175, 0.3) 100%
    );
  }

  .dark .skeleton-status {
    background: linear-gradient(
      135deg,
      rgba(75, 85, 99, 0.25) 0%,
      rgba(75, 85, 99, 0.35) 100%
    );
  }

  /* Smooth transition container with larger size */
  .nav-container {
    position: relative;
    min-height: 56px;
    min-width: 320px;
    display: flex;
    align-items: center;
    will-change: contents;
  }

  @media (min-width: 768px) {
    .nav-container {
      min-height: 48px;
      min-width: 480px;
    }
  }
</style>

<div class="nav-container">
  <!-- Enhanced skeleton with better visual hierarchy -->
  <div
    id="nav-skeleton"
    data-skeleton="navigation"
    class="flex items-center gap-2 ml-2 md:ml-4 pr-4 transition-all duration-500 min-w-[320px] md:min-w-[480px]"
    aria-hidden="true"
    style="position: absolute; inset: 0; z-index: 15; pointer-events: none;"
  >
    <!-- Shimmer overlay effect -->
    <div class="absolute inset-0 shimmer-bg rounded-lg pointer-events-none"></div>

    <!-- Navigation skeleton items with stagger (6 items for logged in users) -->
    {[0, 1, 2, 3, 4, 5].map((i) => (
      <div
        class="skeleton-item w-10 h-10 md:w-9 md:h-9 rounded-lg"
        style={`animation-delay: ${i * 100}ms; opacity: 0; animation: fade-in 0.5s ${i * 100}ms forwards;`}
      >
        <div class="absolute inset-0 shimmer-bg rounded-lg"></div>
      </div>
    ))}

    <!-- Separator skeleton -->
    <div class="skeleton-separator h-8 w-px mx-3" style="animation: fade-in 0.5s 600ms forwards; opacity: 0;"></div>

    <!-- Status section skeleton -->
    <div
      class="skeleton-status flex items-center gap-2 px-3 py-1.5 rounded-lg"
      style="animation: fade-in 0.5s 700ms forwards; opacity: 0; min-width: 100px;"
    >
      <!-- Status dot -->
      <div class="w-2.5 h-2.5 rounded-full bg-gray-400/50 dark:bg-gray-600/50"></div>
      <!-- Avatar placeholder -->
      <div class="w-7 h-7 rounded-full bg-gray-300/50 dark:bg-gray-700/50"></div>
      <!-- Text placeholder -->
      <div class="w-20 h-3 rounded bg-gray-300/50 dark:bg-gray-700/50"></div>
    </div>
  </div>

  <!-- React navigation component -->
  <ReactNavigationBar client:only="react" />
</div>

<!-- Global animation styles -->
<style is:global>
  /* Ensure smooth transitions during hydration */
  .nav-container > * {
    transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Container responsiveness */
  .nav-container {
    contain: layout style;
  }

  /* Prevent layout shift */
  #react-nav {
    contain: layout style;
  }

  /* High-performance animations */
  @media (prefers-reduced-motion: no-preference) {
    .animate-nav-in,
    .animate-icon-in {
      will-change: transform, opacity;
    }
  }
</style>