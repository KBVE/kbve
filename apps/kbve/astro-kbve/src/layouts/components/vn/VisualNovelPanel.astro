---
const {
	options = [],
	defaultId = '',
	sideImage = '/assets/images/brand/earth_ceo.png',
	onChoice = null, // optional: emit choice for external logic
} = Astro.props;

const optionMap = Object.fromEntries(options.map((opt: { id: any; }) => [opt.id, opt]));
const initial = optionMap[defaultId] ?? options[0];
---
<section class="w-full min-h-[700px] px-6 py-6 sm:px-8 lg:px-12">
	<div
		id="vn-panel"
		class="relative w-full h-full flex flex-col md:flex-row rounded-3xl overflow-hidden bg-white/5 backdrop-blur-md ring-1 ring-white/10
		shadow-[inset_0_0_0.5px_rgba(255,255,255,0.15),0_20px_40px_rgba(0,0,0,0.4)] transition-all duration-300">
		
		<!-- Left: Image Area -->
		<div
			id="vn-image"
			class="w-full md:w-3/4 h-[300px] md:h-auto bg-cover bg-center transition-all duration-500 relative z-20"
			style={`background-image: url('${initial.image}');`}>
			<div class="absolute inset-0 bg-black/30"></div>
			<img
				src={sideImage}
				alt="Character"
				class="absolute bottom-0 right-4 transform h-1/2 z-20 drop-shadow-lg"
			/>
			<div
				id="vn-message"
				class="absolute top-4 left-4 max-w-xs text-left text-white text-sm sm:text-base z-20 space-y-2">
			</div>
			<div
				id="vn-choices"
				class="absolute bottom-4 left-4 flex flex-col gap-2 z-20">
			</div>
		</div>

		<!-- Right: Summary Panel -->
		<div
			class="w-full md:w-1/4 relative flex flex-col justify-center p-6 sm:p-8 gap-6 bg-white/5 backdrop-blur-md border-t md:border-t-0 md:border-l border-white/10 z-20">
			<div
				class="absolute inset-0 rounded-[1.375rem] pointer-events-none z-0
				border border-[rgba(34,211,238,0.1)]
				shadow-[inset_0.5px_0.5px_1.5px_rgba(186,230,253,0.6),inset_-1px_-1px_1px_rgba(21,94,117,0.5),inset_3px_3px_6px_rgba(0,0,0,0.25)]
				transform-style-3d translate-z-[30px] m-2">
			</div>

			<div id="vn-title" class="text-xl font-bold text-white">{initial.title}</div>
			<div id="vn-desc" class="text-sm text-zinc-300">{initial.description}</div>
		</div>
	</div>

	<script is:inline define:vars={{ options, defaultId, onChoice }}>
	document.addEventListener("astro:page-load", () => {
		const imageBox = document.getElementById('vn-image');
		const messageBox = document.getElementById('vn-message');
		const choiceBox = document.getElementById('vn-choices');
		const titleBox = document.getElementById('vn-title');
		const descBox = document.getElementById('vn-desc');

		const optionMap = Object.fromEntries(options.map(opt => [opt.id, opt]));
		let currentId = defaultId || options[0]?.id;

		const showMessage = (message) => {
			messageBox.innerHTML = '';
			const words = message.trim().split(' ');
			const totalDuration = 3000;
			const delay = Math.max(50, Math.min(200, totalDuration / words.length));

			words.forEach((word, index) => {
				const span = document.createElement('span');
				span.textContent = word + ' ';
				span.style.opacity = '0';
				span.style.transition = 'opacity 0.3s ease';
				span.style.display = 'inline-block';
				span.style.whiteSpace = 'pre';

				messageBox.appendChild(span);
				setTimeout(() => {
					span.style.opacity = '1';
				}, delay * index);
			});
		};

		const renderNode = (id) => {
			const node = optionMap[id];
			if (!node) return;

			currentId = id;
			imageBox.style.backgroundImage = `url('${node.image}')`;
			titleBox.textContent = node.title;
			descBox.textContent = node.description;
			showMessage(node.message);

			choiceBox.innerHTML = '';
			if (node.choices && node.choices.length > 0) {
				for (const choice of node.choices) {
					const btn = document.createElement('button');
					btn.textContent = choice.label;
					btn.className =
						'px-4 py-2 text-sm rounded-lg bg-cyan-700/80 text-white hover:bg-cyan-800/90 hover:scale-[1.03] transition';
					btn.onclick = () => {
						if (onChoice && typeof window[onChoice] === 'function') {
							window[onChoice](choice.nextId, currentId);
						}
						if (choice.nextId in optionMap) {
							renderNode(choice.nextId);
						}
					};
					choiceBox.appendChild(btn);
				}
			}
		};

		renderNode(currentId);
	});
	</script>
</section>
