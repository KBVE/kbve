---

---

<script
	is:inline
	async
	src="https://cse.google.com/cse.js?cx=partner-pub-3698214103602019:ab1srxiqkuo"
></script>


<!-- Wrapper for Google SearchBox -->
<div class="w-full p-2 rounded-lg bg-zinc-900 border border-cyan-700/30">
	<div class="gcse-searchbox-only"></div>
</div>

<script is:inline>
	const onSearchBoxLoad = () => {
		console.log('[CSE] Styling native search box');

		const apply = (selector, styles) => {
			const el = document.querySelector(selector);
			if (el instanceof HTMLElement) {
				// Try regular Object.assign first (non-conflicting styles)
				Object.assign(el.style, styles);

				// Apply each with !important to guarantee override
				for (const [prop, value] of Object.entries(styles)) {
					el.style.setProperty(prop, value, 'important');
				}
			}
		};

		const applyToAll = (selector, styles) => {
			document.querySelectorAll(selector).forEach((el) => {
				if (el instanceof HTMLElement) {
					Object.assign(el.style, styles);
					for (const [prop, value] of Object.entries(styles)) {
						el.style.setProperty(prop, value, 'important');
					}
				}
			});
		};
		
		// Container box styling
		apply('.gsc-search-box', {
			backgroundColor: '#27272a',
			borderRadius: '0.5rem',
			border: '1px solid rgba(34, 211, 238, 0.3)',
			overflow: 'hidden',
			display: 'flex',
			alignItems: 'center',
			padding: '0',
		});

		// Input area
		apply('.gsc-input', {
			backgroundColor: '#27272a',
			color: '#f4f4f5',
			border: 'none',
			padding: '0.5rem 0.75rem',
			fontSize: '0.875rem',
			height: '2.5rem',
			flex: '1',
		});

		// Native input element
		const input = document.querySelector('input.gsc-input');
		if (input) {
			input.placeholder = 'Search...';
			input.style.setProperty('background-color', '#27272a', 'important');
			input.style.setProperty('color', '#f4f4f5', 'important');
			input.style.setProperty('border', 'none', 'important');
			input.style.setProperty('outline', 'none', 'important');
			input.style.setProperty('height', '2.5rem', 'important');
			input.style.setProperty('font-size', '0.875rem', 'important');
			input.style.setProperty('padding', '0.5rem 0.75rem', 'important');
		}

		// Search Button
		apply('.gsc-search-button', {
			backgroundColor: '#27272a',
			border: 'none',
			minWidth: '2.5rem',
			height: '2.5rem',
			padding: '0.5rem',
			display: 'flex',
			alignItems: 'center',
			justifyContent: 'center',
			position: 'relative',
			cursor: 'pointer',
		});

		applyToAll('.gsc-search-button:hover', {
			backgroundColor: '#0891b2', // Tailwind cyan-600
		});

		// Optional: style SVG icon inside
		applyToAll('.gsc-search-button svg', {
			fill: 'white',
			width: '1rem',
			height: '1rem',
		});
	};

	// Google CSE hook
	window.__gcse = {
		parsetags: 'onload',
		callback: () => setTimeout(onSearchBoxLoad, 100),
	};

	// Fallback polling
	const checkSearchBox = setInterval(() => {
		if (document.querySelector('.gsc-input')) {
			onSearchBoxLoad();
			clearInterval(checkSearchBox);
		}
	}, 500);

	setTimeout(() => clearInterval(checkSearchBox), 10000);
</script>
