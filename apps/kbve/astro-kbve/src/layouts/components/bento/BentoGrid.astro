---
interface GridItem {
  title: string;
  subtitle?: string;
  description?: string;
  span: string;
  primaryColor: string;
  secondaryColor: string;
  icon?: string;
  backgroundImage?: string;
  onclick?: string;
}

const items: GridItem[] = [
  {
    title: 'Analytics',
    subtitle: 'Realtime insights',
    description: 'Track performance metrics and live usage trends.',
    span: 'col-span-3 row-span-3',
    primaryColor: 'purple-600',
    secondaryColor: 'indigo-800',
    icon: 'üìä',
    backgroundImage: 'https://images.unsplash.com/photo-1608222351212-18fe0ec7b13b?q=80&w=600&auto=format&fit=crop&ixlib=rb-4.1.0',
    onclick: `window.kbve?.uiux?.openPanel?.('right', { title: 'Analytics', rawHtml: '<p>More details</p>' })`
  },
  {
    title: 'Servers',
    subtitle: 'Active clusters',
    description: 'Monitor all connected server nodes and their status.',
    span: 'col-span-2 row-span-1',
    primaryColor: 'teal-500',
    secondaryColor: 'cyan-600',
    icon: 'üñ•Ô∏è',
    backgroundImage: 'https://images.unsplash.com/photo-1558494949-ef010cbdcc31?q=80&w=1934&auto=format&fit=crop&ixlib=rb-4.1.0'
  },
  {
    title: 'Logs',
    subtitle: 'System events',
    description: 'View recent backend logs and infrastructure events.',
    span: 'col-span-2 row-span-1',
    primaryColor: 'rose-500',
    secondaryColor: 'pink-600',
    icon: 'üìÅ',
    backgroundImage: '/assets/images/bg/logs.jpg'
  },
  {
    title: 'Deploy',
    subtitle: 'Last push: 2h ago',
    description: 'Manage build deployments and CI/CD workflows.',
    span: 'col-span-1 row-span-1',
    primaryColor: 'amber-400',
    secondaryColor: 'yellow-500',
    icon: 'üöÄ',
    backgroundImage: '/assets/images/bg/deploy.jpg'
  },
  {
    title: 'Alerts',
    subtitle: '2 critical',
    description: 'Review critical error reports and live alert states.',
    span: 'col-span-1 row-span-1',
    primaryColor: 'red-600',
    secondaryColor: 'orange-500',
    icon: '‚ö†Ô∏è',
    backgroundImage: '/assets/images/bg/alerts.jpg'
  },
  {
    title: 'Alerts',
    subtitle: '2 critical',
    description: 'System redundancy warnings and fallback triggers.',
    span: 'col-span-1 row-span-1',
    primaryColor: 'red-600',
    secondaryColor: 'orange-500',
    icon: '‚ö†Ô∏è',
    backgroundImage: '/assets/images/bg/alerts-alt.jpg'
  }
];

import BentoTile from './BentoTile.astro';

---

<style is:global>
  .bento-glow::before {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(ellipse at center, white 5%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    pointer-events: none;
    mix-blend-mode: overlay;
  }

  .bento-item:hover .bento-glow::before {
    opacity: 0.05;
  }

  .noise-overlay {
    background-image: url('/assets/images/bg/noise.png');
    opacity: 0.03;
    mix-blend-mode: overlay;
    pointer-events: none;
    position: absolute;
    inset: 0;
  }

  .bento-item::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.1);
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    z-index: 1;
  }

  .bento-item:hover::after {
    opacity: 0.15;
  }

  .bento-reflection::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 120%;
    height: 50%;
    background: linear-gradient(135deg, rgba(255,255,255,0.15), transparent);
    transform: rotate(-5deg);
    pointer-events: none;
    z-index: 2;
  }

  .bento-bg-image {
    opacity: 0.45;
    filter: brightness(1.1) contrast(1.1);
    pointer-events: none;
    border-radius: inherit;
    transition: transform 0.3s ease;
    will-change: transform;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: scale(0.95);
    }
    to {
      opacity: 1;
      transform: scale(1);
    }
  }

  .animate-fade-in {
    animation: fade-in 0.4s ease forwards;
  }
</style>

<div class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-6 gap-4 p-4 auto-rows-[140px] grid-flow-dense" bento-grid>
  {items.map((item) => (
    <BentoTile {...item} />
  ))}
  <slot />
</div>