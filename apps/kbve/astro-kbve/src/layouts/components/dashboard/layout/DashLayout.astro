---
import StatsCards from 'src/layouts/components/dashboard/home//components/StatsCards';
import ActivityFeed from 'src/layouts/components/dashboard/home//components/ActivityFeed';
import QuickActions from 'src/layouts/components/dashboard/home//components/QuickActions';
import StatusCard from 'src/layouts/components/dashboard/home//components/StatusCard';
import WelcomeInfo from 'src/layouts/components/dashboard/home//components/WelcomeInfo';
import ChartCard from 'src/layouts/components/dashboard/home//components/ChartCard';
import TableCard from 'src/layouts/components/dashboard/home/components/TableCard';
import NeoGlassPanel from 'src/layouts/components/panel/NeoGlassPanel.astro';
import AsideBar from 'src/layouts/components/dashboard/aside/AsideBar.astro';
import DashboardFooter from 'src/layouts/components/dashboard/footer/DashboardFooter.astro';
import MiniNav from 'src/layouts/components/dashboard/basic/MiniNav';

---

<style>
	@import 'src/layouts/components/dashboard/home/components/animations.css';
</style>

<div
	class="min-h-screen bg-zinc-900 text-white perspective-distant dashboard-container"
	data-grid="home">
	<!-- Header Section -->
	<header class="border-b border-zinc-800 bg-zinc-900/50 backdrop-blur-sm relative z-50">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">

			
			<div class="flex items-center justify-between">

				
				<div class="flex items-center space-x-4">
					<!-- Mobile Menu Button -->
					<button
						id="mobile-menu-btn"
						class="lg:hidden p-2 text-zinc-400 hover:text-white">
						<svg
							class="w-6 h-6"
							fill="none"
							stroke="currentColor"
							viewBox="0 0 24 24">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M4 6h16M4 12h16M4 18h16">
							</path>
						</svg>
					</button>
					
				</div>

				
				<div class="relative flex items-center space-x-4">
					<!-- Avatar Skeleton -->
					<div class="flex items-center space-x-4" data-skeleton="avatar">
						<!-- User Avatar Skeleton -->
						<div
							class="w-10 h-10 bg-zinc-800 rounded-full animate-pulse">
						</div>
						<div class="hidden sm:block">
							<div class="h-4 bg-zinc-800 rounded w-24 animate-pulse">
							</div>
							<div
								class="h-3 bg-zinc-800 rounded w-16 mt-1 animate-pulse">
							</div>
						</div>
					</div>
					<!-- MiniNav Component -->
					<MiniNav client:only="react" />
				</div>
			</div>
		</div>
	</header>

	<!-- Main Dashboard Container -->
	<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 relative z-10">
		<div class="flex gap-8">
			<!-- Sidebar Overlay for Mobile -->
			<div
				id="sidebar-overlay"
				class="fixed inset-0 bg-black/50 z-40 lg:hidden hidden opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out">
			</div>

			<!-- Left Sidebar -->
			<AsideBar>
				<div slot="aside">
					<!-- Custom aside content can be passed here -->
					<!-- You can add custom navigation or content here -->
					<slot name="aside" />
				</div>
			</AsideBar>

			<main class="flex-1 min-w-0 relative z-0">
				<slot />
			</main>
		</div>
	</div>

</div>

	<!-- Footer -->
	 <DashboardFooter />

<script>
	// Sidebar functionality
	document.addEventListener('DOMContentLoaded', function () {
		const mobileMenuBtn = document.getElementById('mobile-menu-btn');
		const closeSidebarBtn = document.getElementById('close-sidebar');
		const sidebar = document.getElementById('sidebar');
		const overlay = document.getElementById('sidebar-overlay');

		function openSidebar() {
			if (sidebar && overlay) {
				// Show sidebar
				sidebar.classList.remove('-translate-x-full');
				sidebar.classList.add('translate-x-0');

				// Show overlay
				overlay.classList.remove(
					'hidden',
					'opacity-0',
					'pointer-events-none'
				);
				overlay.classList.add('opacity-100');

				// Prevent body scroll on mobile
				document.body.classList.add('overflow-hidden');
			}
		}

		function closeSidebar() {
			if (sidebar && overlay) {
				// Hide sidebar on mobile, keep visible on desktop
				sidebar.classList.remove('translate-x-0');
				sidebar.classList.add('-translate-x-full');

				// Hide overlay
				overlay.classList.remove('opacity-100');
				overlay.classList.add('opacity-0', 'pointer-events-none');

				// Re-enable body scroll
				document.body.classList.remove('overflow-hidden');

				// Add delay before hiding to allow transition
				setTimeout(() => {
					if (overlay.classList.contains('opacity-0')) {
						overlay.classList.add('hidden');
					}
				}, 300);
			}
		}

		// Mobile menu button click
		mobileMenuBtn?.addEventListener('click', openSidebar);

		// Close sidebar button click
		closeSidebarBtn?.addEventListener('click', closeSidebar);

		// Overlay click to close sidebar
		overlay?.addEventListener('click', closeSidebar);

		// Handle escape key
		document.addEventListener('keydown', function (e) {
			if (
				e.key === 'Escape' &&
				sidebar &&
				sidebar.classList.contains('translate-x-0')
			) {
				closeSidebar();
			}
		});

		// Handle window resize
		window.addEventListener('resize', function () {
			if (window.innerWidth >= 1024) {
				// lg breakpoint
				closeSidebar();
			}
		});
	});
</script>
