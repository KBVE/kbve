---
import StatsCards from './components/StatsCards';
import ActivityFeed from './components/ActivityFeed';
import QuickActions from './components/QuickActions';
import StatusCard from './components/StatusCard';
import WelcomeInfo from './components/WelcomeInfo';
import ChartCard from './components/ChartCard';
import TableCard from './components/TableCard';
import NeoGlassPanel from 'src/layouts/components/panel/NeoGlassPanel.astro';
import AsideBar from 'src/layouts/components/dashboard/aside/AsideBar.astro';

---

<style>
  @import './components/animations.css';
</style>

<div class="min-h-screen bg-zinc-900 text-white perspective-distant" data-grid="home">
  <!-- Header Section -->
  <header class="border-b border-zinc-800 bg-zinc-900/50 backdrop-blur-sm">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-4">
          <!-- Mobile Menu Button -->
          <button id="mobile-menu-btn" class="lg:hidden p-2 text-zinc-400 hover:text-white">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
          <div>
            <!-- <h1 class="text-3xl font-bold text-cyan-400">K B V E</h1> -->
           
            <span
					id="kbve-tagline"
					class="block text-lg sm:text-xl font-semibold text-cyan-300">
					KiloByte Virtual
					<span
						id="kbve-word"
						class="inline-block transition-opacity duration-500 ease-in-out opacity-100">
						Enterprise
					</span>
				</span>
         <p class="text-zinc-400 mt-1">Welcome back to your control center</p>
          </div>
        </div>
        <div class="flex items-center space-x-4">
          <!-- User Avatar Skeleton -->
          <div class="w-10 h-10 bg-zinc-800 rounded-full animate-pulse"></div>
          <div class="hidden sm:block">
            <div class="h-4 bg-zinc-800 rounded w-24 animate-pulse"></div>
            <div class="h-3 bg-zinc-800 rounded w-16 mt-1 animate-pulse"></div>
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Main Dashboard Container -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="flex gap-8">
      <!-- Sidebar Overlay for Mobile -->
      <div id="sidebar-overlay" class="fixed inset-0 bg-black/50 z-40 lg:hidden hidden opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out"></div>
      
      <!-- Left Sidebar -->
      <AsideBar />



      <!-- Main Content Area -->
      <main class="flex-1 min-w-0">

        <NeoGlassPanel />

        <!-- Stats Grid -->
        <div class="mb-8">
          <!-- Stats Container with relative positioning -->
          <div class="relative min-h-[140px]">
            <!-- Stat Card Skeletons - Higher z-index, visible by default -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 relative z-20" data-skeleton="stats">
              {Array.from({ length: 4 }).map((_, i) => (
                <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700">
                  <div class="flex items-center justify-between">
                    <div>
                      <div class="h-4 bg-zinc-700 rounded w-20 animate-pulse"></div>
                      <div class="h-8 bg-zinc-700 rounded w-16 mt-2 animate-pulse"></div>
                    </div>
                    <div class="w-12 h-12 bg-zinc-700 rounded-lg animate-pulse"></div>
                  </div>
                  <div class="mt-4">
                    <div class="h-3 bg-zinc-700 rounded w-full animate-pulse"></div>
                  </div>
                </div>
              ))}
            </div>
            
            <!-- Dynamic Stats Cards - Lower z-index, absolute positioned to overlap -->
            <div class="absolute inset-0 z-10">
              <StatsCards client:only="react" />
            </div>
          </div>
        </div>

    <!-- Main Dashboard Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Left Column - Charts/Analytics -->
      <div class="lg:col-span-2 space-y-6">
        <!-- Chart Card Container -->
        <div class="relative min-h-[400px]">
          <!-- Chart Card Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20 h-full" id="chart-skeleton" data-skeleton="charts">
            <div class="flex items-center justify-between mb-6">
              <div>
                <div class="h-6 bg-zinc-700 rounded w-32 animate-pulse"></div>
                <div class="h-3 bg-zinc-700 rounded w-48 mt-2 animate-pulse"></div>
              </div>
              <div class="flex space-x-2">
                <div class="w-8 h-8 bg-zinc-700 rounded animate-pulse"></div>
                <div class="w-8 h-8 bg-zinc-700 rounded animate-pulse"></div>
              </div>
            </div>
            <div class="h-64 bg-zinc-700 rounded animate-pulse"></div>
            <div class="mt-4 flex items-center justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-4 h-4 bg-zinc-700 rounded animate-pulse"></div>
                <div class="h-4 bg-zinc-700 rounded w-24 animate-pulse"></div>
              </div>
              <div class="flex items-center space-x-1">
                <div class="w-4 h-4 bg-zinc-700 rounded animate-pulse"></div>
                <div class="h-4 bg-zinc-700 rounded w-12 animate-pulse"></div>
              </div>
            </div>
          </div>
          
          <!-- Dynamic Chart Card - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <ChartCard client:only="react" />
          </div>
        </div>

        <!-- Table Card Container -->
        <div class="relative min-h-[350px]">
          <!-- Table Card Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20 h-full" id="table-skeleton" data-skeleton="tables">
            <div class="flex items-center justify-between mb-6">
              <div class="h-6 bg-zinc-700 rounded w-40 animate-pulse"></div>
              <div class="h-9 bg-zinc-700 rounded w-24 animate-pulse"></div>
            </div>
            <div class="space-y-3">
              {Array.from({ length: 5 }).map((_, i) => (
                <div class="flex items-center space-x-4 p-3 rounded-lg">
                  <div class="w-10 h-10 bg-zinc-700 rounded-full animate-pulse"></div>
                  <div class="flex-1 space-y-2">
                    <div class="flex items-center space-x-2">
                      <div class="h-4 bg-zinc-700 rounded w-32 animate-pulse"></div>
                      <div class="h-5 bg-zinc-700 rounded w-16 animate-pulse"></div>
                    </div>
                    <div class="flex items-center space-x-2">
                      <div class="h-3 bg-zinc-700 rounded w-20 animate-pulse"></div>
                      <div class="h-3 bg-zinc-700 rounded w-16 animate-pulse"></div>
                    </div>
                  </div>
                  <div class="w-8 h-8 bg-zinc-700 rounded animate-pulse"></div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Dynamic Table Card - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <TableCard client:only="react" />
          </div>
        </div>
      </div>

      <!-- Right Column - Sidebar -->
      <div class="space-y-6">
        <!-- Quick Actions Card Container -->
        <div class="relative min-h-[200px]">
          <!-- Quick Actions Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20 h-full" id="quick-actions-skeleton">
            <div class="h-6 bg-zinc-700 rounded w-28 mb-4 animate-pulse"></div>
            <div class="space-y-3">
              {Array.from({ length: 4 }).map((_, i) => (
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-zinc-700 rounded animate-pulse"></div>
                  <div class="h-4 bg-zinc-700 rounded flex-1 animate-pulse"></div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Dynamic Quick Actions - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <QuickActions client:only="react" />
          </div>
        </div>

        <!-- Activity Feed Container -->
        <div class="relative min-h-[400px]">
          <!-- Activity Feed Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20 h-full" id="activity-skeleton">
            <div class="h-6 bg-zinc-700 rounded w-32 mb-4 animate-pulse"></div>
            <div class="space-y-4">
              {Array.from({ length: 6 }).map((_, i) => (
                <div class="flex items-start space-x-3">
                  <div class="w-8 h-8 bg-zinc-700 rounded-full animate-pulse mt-1"></div>
                  <div class="flex-1 space-y-2">
                    <div class="h-3 bg-zinc-700 rounded animate-pulse"></div>
                    <div class="h-3 bg-zinc-700 rounded w-4/5 animate-pulse"></div>
                    <div class="h-2 bg-zinc-700 rounded w-16 animate-pulse"></div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Dynamic Activity Feed - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <ActivityFeed client:only="react" />
          </div>
        </div>

        <!-- System Status Card Container -->
        <div class="relative">
          <!-- Status Card Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20" id="status-card">
            <div class="h-6 bg-zinc-700 rounded w-28 mb-4 animate-pulse"></div>
            <div class="space-y-3">
              {Array.from({ length: 3 }).map((_, i) => (
                <div class="flex items-center justify-between">
                  <div class="h-4 bg-zinc-700 rounded w-20 animate-pulse"></div>
                  <div class="flex items-center space-x-2">
                    <div class="w-3 h-3 bg-zinc-700 rounded-full animate-pulse"></div>
                    <div class="h-3 bg-zinc-700 rounded w-12 animate-pulse"></div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <!-- Dynamic Status Card - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <StatusCard client:only="react" />
          </div>
        </div>

        <!-- Welcome Info Container -->
        <div class="relative">
          <!-- Welcome Skeleton - Higher z-index -->
          <div class="bg-zinc-800 rounded-lg p-6 border border-zinc-700 relative z-20" id="welcome-skeleton">
            <div class="h-6 bg-zinc-700 rounded w-24 mb-4 animate-pulse"></div>
            <div class="space-y-3">
              <div class="h-4 bg-zinc-700 rounded animate-pulse"></div>
              <div class="h-4 bg-zinc-700 rounded w-3/4 animate-pulse"></div>
              <div class="h-10 bg-zinc-700 rounded animate-pulse"></div>
            </div>
          </div>
          
          <!-- Dynamic Welcome Info - Lower z-index, absolute positioned -->
          <div class="absolute inset-0 z-10">
            <WelcomeInfo client:only="react" />
          </div>
        </div>
      </main>
    </div>
  </div>
</div>

<script>
  // Sidebar functionality
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuBtn = document.getElementById('mobile-menu-btn');
    const closeSidebarBtn = document.getElementById('close-sidebar');
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('sidebar-overlay');

    function openSidebar() {
      if (sidebar && overlay) {
        // Show sidebar
        sidebar.classList.remove('-translate-x-full');
        sidebar.classList.add('translate-x-0');
        
        // Show overlay
        overlay.classList.remove('hidden', 'opacity-0', 'pointer-events-none');
        overlay.classList.add('opacity-100');
        
        // Prevent body scroll on mobile
        document.body.classList.add('overflow-hidden');
      }
    }

    function closeSidebar() {
      if (sidebar && overlay) {
        // Hide sidebar on mobile, keep visible on desktop
        sidebar.classList.remove('translate-x-0');
        sidebar.classList.add('-translate-x-full');
        
        // Hide overlay
        overlay.classList.remove('opacity-100');
        overlay.classList.add('opacity-0', 'pointer-events-none');
        
        // Re-enable body scroll
        document.body.classList.remove('overflow-hidden');
        
        // Add delay before hiding to allow transition
        setTimeout(() => {
          if (overlay.classList.contains('opacity-0')) {
            overlay.classList.add('hidden');
          }
        }, 300);
      }
    }

    // Mobile menu button click
    mobileMenuBtn?.addEventListener('click', openSidebar);

    // Close sidebar button click
    closeSidebarBtn?.addEventListener('click', closeSidebar);

    // Overlay click to close sidebar
    overlay?.addEventListener('click', closeSidebar);

    // Handle escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && sidebar && sidebar.classList.contains('translate-x-0')) {
        closeSidebar();
      }
    });

    // Handle window resize
    window.addEventListener('resize', function() {
      if (window.innerWidth >= 1024) { // lg breakpoint
        closeSidebar();
      }
    });
  });
</script>