---
export interface Props {
	data?: string;
	widget?: string;
}
const { data, widget } = Astro.props;
---

<tv-widget data-data={data}>
	<div {...Astro.props}>
		<!-- TradingView Widget BEGIN -->
		<div class="tradingview-widget-container">
			<div id="tradingview_1fdf2" class="w-full h-96"></div>
			<br />
			<br />
			<br />
			<br />
			<div class="tradingview-widget-copyright">
				<a href="#tradingview" rel="noopener" target="_blank">
					<span class="blue-text">Stock charts {data}</span>
				</a> by TradingView
			</div>
			<script
				is:inline
				data-astro-rerun
				type="text/javascript"
				src="https://s3.tradingview.com/tv.js">
			</script>
		</div>

		<script type="text/javascript" is:inline data-astro-rerun>
			document.addEventListener('DOMContentLoaded', function () {
				if (!customElements.get('tv-widget')) {
					class TradingViewer extends HTMLElement {
						static get observedAttributes() {
							return ['data-data']; // Watching for changes in 'data-data' attribute
						}

						constructor() {
							super();
							this.widget = null;
						}

						connectedCallback() {
							this.initTradingView();
						}

						attributeChangedCallback(name, oldValue, newValue) {
							if (name === 'data-data' && oldValue !== newValue) {
								this.updateTradingView(newValue);
							}
						}

						initTradingView() {
							const data = this.dataset.data;
							this.createWidget(data);
						}

						createWidget(data) {
							if (this.widget) {
								this.widget.remove(); // Clean up the existing widget if any
							}
							if (window.TradingView) {
								this.widget = new TradingView.widget({
									width: '100%',
									autosize: false,
									symbol: data,
									interval: 'H',
									timezone: 'Etc/UTC',
									theme: 'dark',
									style: '1',
									locale: 'en',
									toolbar_bg: '#f1f3f6',
									enable_publishing: false,
									allow_symbol_change: true,
									container_id: 'tradingview_1fdf2',
								});
							}
						}

						updateTradingView(data) {
							const attemptInitialization = () => {
								if (window.TradingView) {
									clearInterval(initializationAttempt);
									this.createWidget(data);
								}
							};
							const initializationAttempt = setInterval(
								attemptInitialization,
								100
							);
						}
					}
					customElements.define('tv-widget', TradingViewer);
				}
			});
		</script>
		<!-- TradingView Widget END -->
	</div>
</tv-widget>
