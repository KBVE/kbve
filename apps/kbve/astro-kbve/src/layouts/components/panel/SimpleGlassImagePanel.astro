---
const imageOptions = [
	{
		id: 'cloud',
		title: 'Cloud-Native Development',
		description: 'Build scalable, containerized apps for the modern web.',
		image: 'https://images.unsplash.com/photo-1511447333015-45b65e60f6d5?auto=format&fit=crop&w=1000&q=80',
	},
	{
		id: 'gaming',
		title: 'Competitive Gaming',
		description: 'Push your performance and team up for victory.',
		image: 'https://images.unsplash.com/photo-1582769923195-c6e60dc1d8dc?auto=format&fit=crop&w=1000&q=80',
	},
	{
		id: 'creative',
		title: 'Creative Workflow',
		description: 'From design to deployment, streamline your process.',
		image: 'https://images.unsplash.com/photo-1572599919017-5275060a527f?auto=format&fit=crop&w=1000&q=80',
	},
];

const defaultImage = imageOptions[0].image;
---

<section class="w-full min-h-[600px] px-6 py-12 sm:px-8 lg:px-12">
	<div
		id="simple-glass-panel"
		class="relative w-full h-full flex flex-col md:flex-row rounded-3xl overflow-hidden bg-white/5 backdrop-blur-md ring-1 ring-white/10
		shadow-[inset_0_0_0.5px_rgba(255,255,255,0.15),0_20px_40px_rgba(0,0,0,0.4)] transition-all duration-300">
		<!-- Left: Image Area -->
		<div
			id="image-display"
			class="w-full md:w-1/2 h-[300px] md:h-auto bg-cover bg-center transition-all duration-500 relative z-20"
			style={`background-image: url('${defaultImage}');`}>
			<div class="absolute inset-0 bg-black/30"></div>
			<img
				src="/assets/images/brand/earth_ceo.png"
				alt="Earth CEO"
				class="absolute bottom-0 right-4 transform h-1/2 z-20 drop-shadow-lg"
			/>
			<div
				id="image-message"
				class="absolute top-4 left-4 max-w-xs text-left text-white text-sm sm:text-base z-20 space-y-1">
			</div>
		</div>

		<!-- Right: Selection Blocks -->
		<div
			class="w-full md:w-1/2 relative flex flex-col justify-center p-6 sm:p-8 gap-6 bg-white/5 backdrop-blur-md border-t md:border-t-0 md:border-l border-white/10 z-20">
			<!-- Inner Glow Border Scoped to Right Panel -->
			<div
				class="absolute inset-0 rounded-[1.375rem] pointer-events-none z-0
		border border-[rgba(34,211,238,0.1)]
		shadow-[inset_0.5px_0.5px_1.5px_rgba(186,230,253,0.6),inset_-1px_-1px_1px_rgba(21,94,117,0.5),inset_3px_3px_6px_rgba(0,0,0,0.25)]
		transform-style-3d translate-z-[30px] m-2">
			</div>

			{
				imageOptions.map(({ id, title, description }) => (
					<div
						class="cursor-pointer p-5 rounded-2xl transition-all duration-300 border border-white/10 bg-white/10 backdrop-blur-md text-zinc-300 hover:border-cyan-400 hover:text-white relative z-10"
						data-image-id={id}
						data-active={
							id === imageOptions[0].id ? 'true' : 'false'
						}>
						<h3 class="text-xl font-bold">{title}</h3>
						<p class="mt-2 text-sm">{description}</p>
					</div>
				))
			}
		</div>
	</div>

	<script is:inline define:vars={{ imageOptions }}>
	document.addEventListener("astro:page-load", () => {
		const root = document.getElementById('simple-glass-panel');
		const display = document.getElementById('image-display');
		const messageBox = document.getElementById('image-message');
		if (!root || !display || !messageBox) return;

		const triggers = root.querySelectorAll('[data-image-id]');

		const optionsMap = Object.fromEntries(
			imageOptions.map((opt) => [opt.id, opt.image])
		);

		const messagesMap = {
			cloud: 'Master containerization and modern architecture with our community. Get hands-on experience with Docker, Kubernetes, and cutting-edge cloud technologies while learning from fellow developers...',
			gaming: 'Join our active gaming community across League of Legends, Counter Strike, Overwatch, and World of Warcraft. Form teams, share strategies, and climb the ranks together...',
			creative: 'Imagination meets execution â€” now rendering. From debugging your first container to achieving your next gaming milestone, our community is here to help. Share knowledge, celebrate victories, and grow together...',
		};

		// Typewriter-style fade-in function
		function showMessage(message) {
			messageBox.innerHTML = '';
			const words = message.trim().split(' ');

			const totalDuration = 5000;
			const minDelay = 50;
			const maxDelay = 300;
			const delay = Math.min(Math.max(totalDuration / words.length, minDelay), maxDelay);

			words.forEach((word, index) => {
				const span = document.createElement('span');
				span.textContent = word + ' ';
				span.style.opacity = '0';
				span.style.transition = 'opacity 0.4s ease';
				span.style.display = 'inline-block';
				span.style.whiteSpace = 'pre';

				messageBox.appendChild(span);

				setTimeout(() => {
					span.style.opacity = '1';
				}, delay * index);
			});
		}

		triggers.forEach((el) => {
			el.addEventListener('click', () => {
				const id = el.getAttribute('data-image-id');
				const url = optionsMap[id];

				display.style.backgroundImage = `url('${url}')`;
				triggers.forEach((div) => div.setAttribute('data-active', 'false'));
				el.setAttribute('data-active', 'true');

				showMessage(messagesMap[id] || '');
			});
		});
	});
</script>

</section>
