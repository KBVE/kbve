---
export interface Props {
	rive?: string;
	canvasId?: string;
	className?: string;
	stateMachine?: string;
	inputs?: string;
}
const {
	rive,
	canvasId = 'canvas',
	className = 'w-[300px] h-[300px]',
	stateMachine,
	inputs,
} = Astro.props;

if (!rive) {
	console.warn('[Astro] [Rive] is missing a rive to load!');
}
---

<script is:inline src="https://unpkg.com/@rive-app/canvas@2.20.0"></script>

<astro-rive
	data-rive={rive}
	data-canvas={canvasId}
	data-statemachine={stateMachine}
	data-inputs={inputs}>
	<div id="astro-rive-container" {...Astro.props} class="h-full w-full">
		<canvas id={canvasId} class={className}></canvas>
	</div>
</astro-rive>

<slot />

<script is:inline type="module">
	import riveAppcanvas from 'https://cdn.jsdelivr.net/npm/@rive-app/canvas@2.21.5/+esm';
	window.rive = riveAppcanvas;

	class AstroRive extends HTMLElement {
		constructor() {
			super();
			const _rive = this.dataset.rive;
			const _canvas = this.dataset.canvas;
			const _stateMachine = this.dataset.statemachine;
			const _inputs = this.dataset.inputs;
			window.addEventListener('load', (event) => {
				this.initRive(_rive, _canvas, _stateMachine, _inputs);
			});
		}

		async initRive(_rive, _canvas, _stateMachine, _inputs) {
			const _riveContainer = document.getElementById(
				'astro-rive-container',
			);

			const _canvasId = document.getElementById(_canvas);

			if (riveAppcanvas && _riveContainer && _canvasId) {
				const r = new rive.Rive({
					src: _rive || '', // Use passed 'rive' or default
					canvas: _canvasId,
					autoplay: true,
					stateMachines: _stateMachine,
					onLoad: () => {
						r.resizeDrawingSurfaceToCanvas();
						if (_inputs) {
							const inputs =
								riveInstance.stateMachineInputs(_stateMachine);
							inputs.find((i) => i.name === _inputs).fire();
						}
					},
				});
			} else {
				console.log('Rive not found or canvas missing');
			}
		}
	}

	//customElements.define('astro-rive', AstroRive);
    if (!customElements.get('astro-rive')) {
    customElements.define('astro-rive', AstroRive);
  }
</script>
