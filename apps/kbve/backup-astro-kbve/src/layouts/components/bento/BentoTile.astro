---
import { clsx } from 'clsx';
import { twMerge } from 'tailwind-merge';
import type { BentoTile } from '@kbve/droid';
import { BentoTileSchema, BENTO_VARIANTS, BENTO_ANIMATION_CLASS_MAP } from '@kbve/droid';
import BentoTileRender from './BentoTileRender.astro';

export type Props = BentoTile;

const props = BentoTileSchema.parse(Astro.props);


const {
  title,
  subtitle,
  description,
  span = 'col-span-1 row-span-1 sm:col-span-2 sm:row-span-1',
  primaryColor,
  secondaryColor,
  icon,
  backgroundImage,
  onclick,
  href,
  target = '_self',
  role = 'region',
  ariaLabel,
} = props;

const isLargeTile = span.includes('col-span-3') || span.includes('row-span-3');

const responsiveSpan = span
  .split(' ')
  .map(s => s.startsWith('sm:') ? s : `sm:${s}`)
  .join(' ');

const classes = twMerge(
  clsx(
    'bento-item',
    'col-span-1 row-span-1',
    responsiveSpan,
    'bento-reflection relative overflow-hidden rounded-2xl shadow-2xl hover:scale-[1.01] transition-all duration-300 cursor-pointer group animate-fade-in',
    `bg-gradient-to-br from-${primaryColor} to-${secondaryColor}`,
    `drop-shadow-${primaryColor}/40 drop-shadow-xl`,
    `hover:drop-shadow-${secondaryColor}/60 drop-shadow-2xl`
  )
);
---


{href ? (
  <a
    href={href}
    target={target}
    role={role}
    aria-label={ariaLabel}
    class={classes}
    onclick={onclick}
    data-astro-prefetch
  >
    <BentoTileRender
      title={title}
      subtitle={subtitle}
      description={description}
      icon={icon}
      backgroundImage={backgroundImage}
      isLargeTile={isLargeTile}
    />
  </a>
) : (
  <div
    role={role}
    aria-label={ariaLabel}
    class={classes}
    onclick={onclick}
  >
    <BentoTileRender
      title={title}
      subtitle={subtitle}
      description={description}
      icon={icon}
      backgroundImage={backgroundImage}
      isLargeTile={isLargeTile}
    />
  </div>
)}
