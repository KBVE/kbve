name: CI - Dev

on:
    push:
        branches:
            - 'dev*'

    pull_request:
        branches:
            - 'main'
        types: [synchronize]
jobs:
    handle:
        name: 'Dev to Main'
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Auto-Pull
              id: open-pr
              uses: diillson/auto-pull-request@v1.0.1
              with:
                  destination_branch: 'main'
                  pr_title: 'Preparing Main Branch'
                  pr_body: |
                      *An automated PR for Main*
                      This PR is for the main branch
                  pr_label: 'auto-pr'

            - name: Fetch dev branch
              run: git fetch origin main

            - name: Update PR Body After Opening
              run: |
                  pr_number=$(gh pr list --head ${{ github.ref }} --json number --jq '.[0].number')


                  echo "Raw commits (before cleaning):"
                  git log --oneline origin/main..HEAD

                  cleaned_commits=$(git log --oneline origin/main..HEAD | sed -E 's/^[a-f0-9]{7} \([^)]*\) //')

                  echo "Cleaned commits:"
                  echo "$cleaned_commits"

                  ci_commits=$(echo "$cleaned_commits" | grep -i " ci(" | tr '\n' '\n')
                  fix_commits=$(echo "$cleaned_commits" | grep -i " fix(" | tr '\n' '\n')
                  docs_commits=$(echo "$cleaned_commits" | grep -i " docs(" | tr '\n' '\n')
                  feat_commits=$(echo "$cleaned_commits" | grep -i " feat(" | tr '\n' '\n')
                  merge_commits=$(echo "$cleaned_commits" | grep -i " Merge pull request" | tr '\n' '\n')
                  other_commits=$(echo "$cleaned_commits" | grep -viE " ci\(| fix\(| docs\(| feat\(| Merge pull request" | tr '\n' '\n')

                  # Build the PR body
                  pr_body="## Initial PR body for Main with categorized commits: <br> <br>"
                  if [ -n "$ci_commits" ]; then
                    pr_body+="### CI Changes: <br>  $ci_commits <br> <br>"
                  fi
                  if [ -n "$fix_commits" ]; then
                    pr_body+="### Fixes: <br>  $fix_commits <br> <br>"
                  fi
                  if [ -n "$docs_commits" ]; then
                    pr_body+="### Documentation: <br>  $docs_commits <br> <br>"
                  fi
                  if [ -n "$feat_commits" ]; then
                    pr_body+="### Features: <br>  $feat_commits <br> <br>"
                  fi
                  if [ -n "$merge_commits" ]; then
                    pr_body+="### Merge Commits: <br>  $merge_commits <br> <br>"
                  fi
                  if [ -n "$other_commits" ]; then
                    pr_body+="### Other Commits: <br>  $other_commits <br> <br>"
                  fi

                  # Print the PR body for debugging
                  echo "PR Body: $pr_body"

                  # Update the PR body
                  gh pr edit $pr_number --body "$pr_body"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    alter:
      name: "Dev Alters"
      if: github.repository == 'kbve/kbve'
      uses: KBVE/kbve/.github/workflows/utils-file-alterations.yml@main
      with:
          branch: "dev"
                